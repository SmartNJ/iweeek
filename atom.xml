<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>毁于随</title>
  
  <subtitle>命在于自造，运在于自改，福在于自求，境在于自选，友在于自择，习在于自改，悟在于自通，凡事在于自己。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.iweeek.com/"/>
  <updated>2018-06-22T01:53:42.734Z</updated>
  <id>http://www.iweeek.com/</id>
  
  <author>
    <name>毁于随</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux sed总结</title>
    <link href="http://www.iweeek.com/2018/06/23/linux/daily-command-sed/"/>
    <id>http://www.iweeek.com/2018/06/23/linux/daily-command-sed/</id>
    <published>2018-06-23T08:54:10.000Z</published>
    <updated>2018-06-22T01:53:42.734Z</updated>
    
    <content type="html"><![CDATA[<p>sed命令一个流式编辑器，它可以对文本流、指定文件集或标准输入进行文本编辑。</p><a id="more"></a><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>sed [选项] &#39;命令&#39; 文本</code></p><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>sed命令是stream editor（流式编辑器）的缩写，它可以对文本流、指定文件集或标准输入进行文本编辑。sed编辑器默认情况下没有破坏性，所有的输出都被打印到屏幕上。并且它不会修改文件，除非使用shell重定向来保存输出结果。<br>sed是一个强大的文本过滤工具。使用sed可以从文件或字符串中抽取所需信息。<br>sed命令总是以单个字母开头。<br>sed多数命令允许在前面加个地址。该地址用于指定输入流的哪一行被编辑，如果省略，默认是对所有行都进行编辑。</p><h2 id="sed正则表达式"><a href="#sed正则表达式" class="headerlink" title="sed正则表达式"></a>sed正则表达式</h2><p>表1：sed的正则表达式元字符</p><table><thead><tr><th style="text-align:left">元字符</th><th style="text-align:left">功 能</th><th style="text-align:left">示 例</th><th style="text-align:left">示例的匹配对象</th></tr></thead><tbody><tr><td style="text-align:left">^</td><td style="text-align:left">行首定位符</td><td style="text-align:left">/^iweeek/</td><td style="text-align:left">匹配所有以iweeek开头的行</td></tr><tr><td style="text-align:left">$</td><td style="text-align:left">行尾定位符</td><td style="text-align:left">/iweeek$/</td><td style="text-align:left">匹配所有以iweeek结尾的行</td></tr><tr><td style="text-align:left">.</td><td style="text-align:left">匹配除换行外的单个字符</td><td style="text-align:left">/i…k/</td><td style="text-align:left">匹配包含字符i、后跟三个任意字符、再跟字母k的行</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">匹配零个或多个前导字符</td><td style="text-align:left">/*iweeek/</td><td style="text-align:left">匹配在零个或多个空格紧跟着模式iweeek的行</td></tr><tr><td style="text-align:left">[]</td><td style="text-align:left">匹配指定字符组内任一字符</td><td style="text-align:left">/i[Ww]eeek/</td><td style="text-align:left">匹配包含iweeek或iWeeek的行</td></tr><tr><td style="text-align:left">[^]</td><td style="text-align:left">匹配不在指定字符组内任一字符</td><td style="text-align:left">/[^A-HJ-Z]weeek/</td><td style="text-align:left">匹配包含weeek，但weeek之前的那个字符不在A至H或J至Z间的行</td></tr><tr><td style="text-align:left">(..)</td><td style="text-align:left">保存已匹配的字符</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">&amp;</td><td style="text-align:left">保存查找串以便在替换串中引用</td><td style="text-align:left">s/iweeek/**&amp;**/</td><td style="text-align:left">符号&amp;代表查找串。字符串iweeek将替换前后各加了两个**的引用，即iweeek变成**iweeek**</td></tr><tr><td style="text-align:left">\&lt;</td><td style="text-align:left">词首定位符</td><td style="text-align:left">/\&lt;iweeek/</td><td style="text-align:left">匹配包含以iweeek开头的单词的行</td></tr><tr><td style="text-align:left">\&gt;</td><td style="text-align:left">词尾定位符</td><td style="text-align:left">/iweeek\&gt;/</td><td style="text-align:left">匹配包含iweeek结尾的单词的行</td></tr><tr><td style="text-align:left">x\{m\}</td><td style="text-align:left">连续m个x</td><td style="text-align:left">/o\{5\}/</td><td style="text-align:left">分别匹配出现连续5个字母o的行</td></tr><tr><td style="text-align:left">x\{m,\}</td><td style="text-align:left">至少m个x</td><td style="text-align:left">/o\{5,\}/</td><td style="text-align:left">匹配至少5个连续的o的行</td></tr><tr><td style="text-align:left">x\{m,n\}</td><td style="text-align:left">至少m个x，但不超过n个x</td><td style="text-align:left">/o\{5,10\}/</td><td style="text-align:left">匹配5~10个连续的o的行</td></tr></tbody></table><h2 id="sed常用选项"><a href="#sed常用选项" class="headerlink" title="sed常用选项"></a>sed常用选项</h2><p>表2：sed的常用选项</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">-n</td><td style="text-align:left">不产生命令输出，使用print命令来完成输出</td></tr><tr><td style="text-align:left">-e</td><td style="text-align:left">执行多个命令。在处理输入时，将script中指定的命令添加到已有的命令中，且命令顺序会影响结果</td></tr><tr><td style="text-align:left">-f</td><td style="text-align:left">执行多个命令。在处理输入时，将file中指定的命令添加到已有的命令中</td></tr><tr><td style="text-align:left">-r</td><td style="text-align:left">使用扩展正则</td></tr><tr><td style="text-align:left">-i</td><td style="text-align:left">直接修改文档读取的内容，不在屏幕上输出</td></tr></tbody></table><h2 id="sed使用地址定位"><a href="#sed使用地址定位" class="headerlink" title="sed使用地址定位"></a>sed使用地址定位</h2><p>sed命令在没有给定位置时，默认会处理所有行。<br>sed支持行寻址模式，在sed编辑器中有两种形式的行寻址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[address]command</span><br><span class="line">也可以将特定地址的多个命令</span><br><span class="line">address &#123;</span><br><span class="line">command1</span><br><span class="line">command2</span><br><span class="line">command3</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sed编辑器会将指定的每条命令作用到匹配指定地址的行上。具体有以下几种地址类型：</p><ol><li>以数字方式的行寻址<ul><li>first~step<ul><li>first指其实匹配行，step指步长。例如：sed -n 2~5p。含义：从第二行开始匹配，每隔5行匹配一次，即2,7,12……。</li></ul></li><li>$<ul><li>表示匹配最后一行。</li></ul></li><li>addr1, addr2<ul><li>定址addr1，addr2决定用于对哪些行进行编辑。地址的形式可以是数字、正则表达式或二者的结合。如果没有指定地址，sed将处理输入文件中的所有行。如果定址是一个数字，则这个数字代表行号，如果是逗号分隔的两个行号，那么代表着两行之间的范围（包括两行在内）。范围可以是数字，正则或二者结合。</li></ul></li><li>addr1, +N<ul><li>从addr1这行到往下N行匹配，总共匹配N+1行。</li></ul></li><li>addr1, ~N<br>  -</li></ul></li><li>使用模式过滤器的行寻址<ul><li>/REGEXP/<ul><li>表示匹配正则的那一行，通过//之间的正则表达式来匹配。</li></ul></li><li>\cREGEXPc<ul><li>表示匹配正则的那一行，通过\c和c之间的正则表达式来匹配，c可以是任意字符。</li></ul></li></ul></li><li>组合行寻址<ul><li>数字行寻址和模式行寻址组合起来。例如’3,${s/first/First/ s/second/Second/}’</li></ul></li></ol><h2 id="sed操作命令"><a href="#sed操作命令" class="headerlink" title="sed操作命令"></a>sed操作命令</h2><p>sed操作命令告诉sed如何处理由地址指定的各输入行。如果没有指定地址，sed就会处理输入的所有的行。</p><p>表3：sed命令</p><table><thead><tr><th style="text-align:left">命 令</th><th style="text-align:left">说 明</th></tr></thead><tbody><tr><td style="text-align:left">a\</td><td style="text-align:left">在当前行后添加一行或多行</td></tr><tr><td style="text-align:left">c\</td><td style="text-align:left">用新文本修改（替换）当前行中的文本</td></tr><tr><td style="text-align:left">d</td><td style="text-align:left">删除行</td></tr><tr><td style="text-align:left">i\</td><td style="text-align:left">在当前行之前插入文本</td></tr><tr><td style="text-align:left">h</td><td style="text-align:left">把模式空间里的内容复制到暂存缓存区</td></tr><tr><td style="text-align:left">H</td><td style="text-align:left">把模式空间里的内容追加到暂存缓存区</td></tr><tr><td style="text-align:left">g</td><td style="text-align:left">取出暂存缓冲区里的内容，将其复制到模式空间，覆盖该处原有内容</td></tr><tr><td style="text-align:left">G</td><td style="text-align:left">取出暂存缓冲区里的内容，将其复制到模式空间，追加在原有内容后面</td></tr><tr><td style="text-align:left">l</td><td style="text-align:left">列出非打印字符</td></tr><tr><td style="text-align:left">p</td><td style="text-align:left">打印行</td></tr><tr><td style="text-align:left">n</td><td style="text-align:left">读入下一输入行，并从下一条命令而不是第一条命令开始处理</td></tr><tr><td style="text-align:left">q</td><td style="text-align:left">结束或退出 sed</td></tr><tr><td style="text-align:left">r</td><td style="text-align:left">从文件中读取输入行</td></tr><tr><td style="text-align:left">!</td><td style="text-align:left">对所选行以外的所有行应用命令</td></tr><tr><td style="text-align:left">s</td><td style="text-align:left">用一个字符串替换另一个</td></tr><tr><td style="text-align:left">N</td><td style="text-align:left">将数据流的下一行加进来创建一个多行组来处理</td></tr><tr><td style="text-align:left">D</td><td style="text-align:left">删除多行组中的一行</td></tr><tr><td style="text-align:left">P</td><td style="text-align:left">打印多行组中的一行</td></tr></tbody></table><h2 id="sed工作过程"><a href="#sed工作过程" class="headerlink" title="sed工作过程"></a>sed工作过程</h2><p>sed编辑器逐行处理文件或标准输入，并将输出结果发送到屏幕。sed把当前正在处理的行保存在一个临时缓存区中，这个缓存区称为模式空间或临时缓存。sed处理完模式空间中的行后（即在该行上执行sed命令后），就把该行发送到屏幕上（除非之前有命令删除这一行或取消打印操作）。sed每处理完输入文件的最后一行后，sed便结束运行。sed把每一行都存在称作保持空间的临时缓存区中，对这个副本进行编辑，不会修改或破坏源文件。</p><h2 id="报错信息和退出信息"><a href="#报错信息和退出信息" class="headerlink" title="报错信息和退出信息"></a>报错信息和退出信息</h2><p>sed通过返回一个状态值来说明执行的结果。如果执行成功，则返回0，如果不成功，则返回非0整数。</p><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="p命令打印"><a href="#p命令打印" class="headerlink" title="p命令打印"></a><strong>p命令打印</strong></h3><p>描述：第一个命令显示mydata中所有的内容，sed默认读取所有行。第二个命令匹配行内出现first的行，使用p命令打印出来，可见加上默认的输出，出现了重复的两行。第三个例子中-n选项使默认的输出失效，与p命令搭配实现了只输出匹配的行。<br>命令：<br><code>sed &#39;&#39; mydata</code><br><code>sed &#39;/first/p&#39; mydata</code><br><code>sed -n &#39;/first/p&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-p.png" alt=""></p><h3 id="d命令删除"><a href="#d命令删除" class="headerlink" title="d命令删除"></a><strong>d命令删除</strong></h3><p>描述：删掉mydata文件中的第3行。<br>命令：<code>sed &#39;3d&#39; mydata</code></p><p>描述：删掉mydata文件中包含first的行。使用正则表达式匹配，第二个命令中反斜线后面的字符可以任意。<br>命令：<br><code>sed &#39;/first/d&#39; mydata</code><br>OR<br><code>sed &#39;\?north?d&#39; ceshi</code></p><p>描述：删掉mydata文件中的第2~3行。<br>命令：<code>sed &#39;2~3d&#39; mydata</code></p><p>描述：删掉mydata文件中的第1和第3行。<br>命令：<code>sed &#39;1,3d&#39; mydata</code></p><p>描述：删掉mydata文件中的第1行，之后删除每次间隔两行的行。<br>命令：<code>sed &#39;1,+2d&#39; mydata</code></p><p>描述：删掉mydata文件中从第3行开始，直到最后一行。<br>命令：<code>sed &#39;1,$d&#39; mydata</code></p><p>描述：删掉mydata文件中从第3行开始，直到最后一行。<br>命令：<code>sed &#39;1,$d&#39; mydata</code></p><p>输出：</p><h3 id="s替换命令"><a href="#s替换命令" class="headerlink" title="s替换命令"></a><strong>s替换命令</strong></h3><p>替换命令在默认情况下只替换每行中出现的第一处，要让替换命令能够替换一行中不同地方出现的文本，需要使用替换标记：<br>表4：替换标志</p><table><thead><tr><th style="text-align:left">标 志</th><th style="text-align:left">说 明</th></tr></thead><tbody><tr><td style="text-align:left">数字</td><td style="text-align:left">表示替换第几处模式匹配的地方</td></tr><tr><td style="text-align:left">g</td><td style="text-align:left">表示在行内进行全局替换</td></tr><tr><td style="text-align:left">p</td><td style="text-align:left">表示将模式空间里的内容打印出来</td></tr><tr><td style="text-align:left">w</td><td style="text-align:left">表示将替换的结果写入文件</td></tr><tr><td style="text-align:left">x</td><td style="text-align:left">表示交换暂存缓冲区与模式空间的内容</td></tr><tr><td style="text-align:left">y</td><td style="text-align:left">表示将字符转换为另一字符（不能对正则表达式使用 y 命令）</td></tr></tbody></table><p>描述：替换每一行中第2次出现的first变为last。<br>命令：<br><code>echo &quot;first come, first served.&quot; | sed &#39;s/first/last/2&#39;</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-number.png" alt=""></p><p>描述：替换第一次出现的first变为last。使用g标志可以替换所有匹配的内容。<br>命令：<br><code>echo &quot;first come, first served.&quot; | sed &#39;s/first/last/&#39;</code><br><code>echo &quot;first come, first served.&quot; | sed &#39;s/first/last/g&#39;</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-s-g.png" alt=""></p><p>描述：替换所有的单词a变为A，正则表达式中的\b仅匹配单词。<br>命令：<code>echo &quot;Fire is a good servant but a bad master.&quot; | sed &#39;s/\ba\b/A/g&#39;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-s-b.png" alt=""></p><p>描述：替换fairy文件中所有出现的you变为You，并且打印出这些行。-n选项与标志p结合，告诉sed只打印发生替换的那些行。<br>命令：<code>sed -n &#39;s/you/You/gp&#39; fairy</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-n-s-p.png" alt=""></p><p>描述：紧跟在s命令后的字符就是查找串和替换串之间的分隔符。分隔符默认是正斜杠，可以改变为其他字符（换行符，反斜线除外）。这个特点在查找包含字符串中含有正斜杠的例子中很管用，例如查找路径名或生日。<br>命令：<code>echo &quot;Content is better than riches?&quot; | sed &#39;s/\?/./&#39;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-s-any-separator.png" alt=""></p><h3 id="模式替代"><a href="#模式替代" class="headerlink" title="模式替代"></a><strong>模式替代</strong></h3><p>描述：使用&amp;来代表替换命令中匹配的模式。这个例子的单词中，以at结尾并且前一个字母任意，所有匹配的单词都将用双引号括起来。<br>命令：<code>echo &quot;The cat sleeps in his hat.&quot; | sed &#39;s/\b.at\b/&quot;&amp;&quot;/g&#39;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-ampersand.png" alt=""></p><p>描述：将一个单词来替换一个短语，该单词正好是该短语的子字符串，这个字符串使用了正好使用了通配符。sed用圆括号来定义替换模式中的子模式，在替代模式中使用特殊字符来引用每个子模式。替代字符由反斜线和数字组成，第一个子模式分配字符\1。<br>在替换命令中使用子模式的圆括号时，必须用转义字符将其标记为分组字符而不是普通的圆括号。<br>命令：<br><code>echo &quot;That funny cat is pretty&quot; | sed &#39;s/funny \(.at\)/\1/&#39;</code><br><code>echo &quot;That funny hat is pretty&quot; | sed &#39;s/funny \(.at\)/\1/&#39;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-s-subpattern-substitution.png" alt=""></p><p>描述：在大数字中插入逗号。<br>命令：<br><code>echo &quot;12345678&quot; | sed &#39;{:starts/\(.*[0-9]\)\([0-9]\{3\}\)/\1,\2/t start}&#39;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-split-big-number.png" alt=""></p><h3 id="逗号-指定行的范围"><a href="#逗号-指定行的范围" class="headerlink" title="逗号,指定行的范围"></a><strong>逗号,指定行的范围</strong></h3><p>行的范围从文件中的一个地址开始，在另一个地址结束。地址范围可以是行号（例如5,10），正则表达式（例如/cat/,/hat/），或者两者的结合(例如/first/,$)，范围是闭合的，包含开始条件的行和结束条件的行，以及两者之间的行。如果结束条件无法满足，就会一直操作到文件结尾。如果结束条件满足，则继续查找满足开始条件的位置，范围重新开始。$观察下面mydata2文件：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-mydata2.png" alt=""></p><p>描述：打印模式2和3之间所有的行。<br>命令：<code>sed -n &#39;/2/,/3/p&#39; mydata2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-2-3.png" alt=""></p><p>描述：打印模式1和3之间所有的行。如果1出现在3之后的某一行，则打印的范围从1所在行开始，都下一个3的行货文件的末尾（如果3未出现）。图中第4行到文件结尾都没有再出现过3，因此打印到了文件结尾，在使用d删除的时候尤为要注意这点。<br>命令：<code>sed -n &#39;/1/,/3/p&#39; mydata2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-1-3.png" alt=""></p><p>描述：打印第3行开始，到第一个匹配1的行之间的所有行。这里数字行寻址和模式行寻址结合起来用。<br>命令：<code>sed -n &#39;3,/1/p&#39; mydata2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-range-number-pattern.png" alt=""></p><p>描述：从第3行开始，到第一个匹配1的行之间的所有行，将各行的行尾（$）替换为字符<em>$。换行符被移到了新的字符串的后面。最后将结果打印出来。<br>命令：`sed -n ‘3,/1/s/$/</em>/p’ mydata2`<br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-range-number-pattern-s.png" alt=""></p><h3 id="e命令多重编辑"><a href="#e命令多重编辑" class="headerlink" title="e命令多重编辑"></a><strong>e命令多重编辑</strong></h3><p>-e选项是编辑命令，用于sed执行多个编辑任务的情况下。在下一行开始编辑前，所有的编辑动作将应用到模式缓存区（模式空间）的行上。每个命令可以用单独的-e选项指定，也可以使用连起来写，命令之间用分号隔开。<br>描述：-e选项用于多重编辑，第一重编辑是第2行到第4行被删除，第二重编辑将1替换为one。因为是逐行进行这两行编辑（这两个命令都在模式空间的当前行上执行），所有编辑命令的顺序会影响结果。例如，如果两条命令都执行的是替换，前一次替换会影响后一次替换。<br>命令：<code>sed -e &#39;2,4d&#39; -e &#39;s/1/one/&#39; mydata2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-e.png" alt=""></p><h3 id="r从文件中读取编辑器命令"><a href="#r从文件中读取编辑器命令" class="headerlink" title="r从文件中读取编辑器命令"></a><strong>r从文件中读取编辑器命令</strong></h3><p>描述：将大量要处理的sed命令放进一个单独的文件中，使用-f选项来指定文件。在这种情况下，不用在每条命令后放一个分号，sed编辑器知道每行都是一条单独的命令。<br>命令：<code>sed -f script.sed mydata2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-script.png" alt=""></p><h3 id="a命令追加"><a href="#a命令追加" class="headerlink" title="a命令追加"></a><strong>a命令追加</strong></h3><p>a命令是追加命令，会将新文本追到到文件中当前行（模式空间中的当前行）的后面。<br>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;[address] command \</span><br><span class="line">new line 1\</span><br><span class="line">new line 2&apos;</span><br><span class="line">file</span><br></pre></td></tr></table></figure><p>描述：向含有字符串first行的下一行加入Hello world。<br>命令：<code>sed &#39;/first/a\Hello world&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-a.png" alt=""></p><p>描述：向含有模式first行的下一行加入两行，分别是Hello world和Welcome!。如果追加的内容超过一行，则除最后一行外，其他各行都必须以反斜杠结尾。<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/first/a Hello world\</span><br><span class="line">Welcome!</span><br><span class="line">&apos; mydata</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-a-more-line.png" alt=""></p><h3 id="i命令插入"><a href="#i命令插入" class="headerlink" title="i命令插入"></a><strong>i命令插入</strong></h3><p>i命令是插入命令，类似于a命令，但不是在当前行后增加文本，而是在当前行前面插入新的文本，即刚读入模式空间的行。</p><p>描述：命令i是插入命令。如果在某一行匹配到模式first，就会在该行的上方插入Hello world和反斜杠后面的内容。<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/first/i Hello world\</span><br><span class="line">-------------------</span><br><span class="line">&apos; mydata</span><br></pre></td></tr></table></figure></p><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-i.png" alt=""></p><h3 id="c命令修改"><a href="#c命令修改" class="headerlink" title="c命令修改"></a><strong>c命令修改</strong></h3><p>c命令是修改命令，它允许修改数据流中整行文本的内容，旧文本被覆盖。<br>描述：将匹配模式first的行修改为新的内容。<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/first/c \</span><br><span class="line">This line is changed.&apos; mydata</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-c.png" alt=""></p><h3 id="多行命令"><a href="#多行命令" class="headerlink" title="多行命令"></a><strong>多行命令</strong></h3><p>sed包含三个可用来处理多行文本的特殊命令。</p><ul><li>N：将数据流中的下一行加进来创建一个多行组。</li><li>D：删除多行组中的一行。</li><li>P：打印多行组中的一行。</li></ul><p>单行版n命令（next）表示获取下一行到模式空间内，后续的sed命令都将应用到这新获取的行上。记住，通常sed编辑器在移动到数据流中的下一文本行之前，会在当前行上执行完所有定义好的命令。n命令改变了这个流程。</p><p>描述：删掉除最后一个空白行之外的所有空白行。<br>命令：<code>sed &#39;/^$/d&#39; mydata3</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-n.png" alt=""></p><p>描述：合并文本行，N命令是n命令的多行版，读取匹配模式之后的下一行之后，替换其中的换行符为空格，将两行文本连成一行。<br>命令：<code>sed &#39;/first/{ N; s/\n/ /}&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-N-append.png" alt=""></p><p>描述：查找句中分散在两行中的短语。源文件如下：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-separator-cat.png" alt=""><br>命令：<code>sed &#39; 2N; s/The.ideals/The nature/g&#39; longtext</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-separator.png" alt=""></p><p>描述：注意到上面例子中使用了通配符（.）来匹配空格和换行符这两种情况。但当匹配换行符时，sed从字符串中删掉了换行符，导致两行合并成了一行。下面的例子用了两个替换命令来解决这个问题，一个用来匹配短语出现在多行中的情况，一个用来匹配短语出现在单行中的情况。<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;2N</span><br><span class="line">s/The ideals/The nature/</span><br><span class="line">s/The\nideals/The\nnature/</span><br><span class="line">&apos; longtext</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-separator-two-way.png" alt=""></p><p>// TODO<br>描述：上面的脚本还是有点问题，如果<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;2N</span><br><span class="line">s/The ideals/The nature/</span><br><span class="line">s/The\nideals/The\nnature/</span><br><span class="line">&apos; longtext</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-separator-two-way.png" alt=""></p><h3 id="y命令转换"><a href="#y命令转换" class="headerlink" title="y命令转换"></a><strong>y命令转换</strong></h3><p>y命令是转换命令，它是唯一可以处理单个字符的sed编辑器命令。字符按照一对一的方式从左到右进行转换。例如y/abc/ABC/，会把小写字母转换成大写字母。</p><p>命令格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[address]y/inchars/ouchars/</span><br></pre></td></tr></table></figure><p>描述：将第2和第3行中所有的小写字母转换成大写字母。<br>命令：<code>sed &#39;2,3y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-y.png" alt=""></p><p>描述：转换命令是一个全局命令，它会从文本中找到所有指定字符自动进行替换，而不考虑它们出现的位置。<br>命令：<code>echo &quot;This 1 is a test of 1 try.&quot; | sed &#39;y/123/789/&#39;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-y-more-place.png" alt=""></p><h3 id="q命令退出"><a href="#q命令退出" class="headerlink" title="q命令退出"></a><strong>q命令退出</strong></h3><p>q命令是退出命令，该命令导致sed程序退出，且不再进行其他的处理。</p><p>描述：打印完第3行之后，程序退出。<br>命令：<code>sed &#39;3q&#39; mydata2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-q.png" alt=""></p><p>描述：打印到匹配模式again的行后，先用s命令替换again为begin，然后q命令让sed退出。<br>命令：<code>sed &#39;/again/{s/again/begin/; q; }&#39; mydata2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-q-more.png" alt=""></p><h3 id="命令打印行号"><a href="#命令打印行号" class="headerlink" title="=命令打印行号"></a><strong>=命令打印行号</strong></h3><p>等号命令会打印行在数据流中的当前行号，行号由数据流中的换行符决定。每出现一个换行符，sed编辑器就认为一行文本结束了。<br>描述：给mydata文件的每行加上行号，行号在当前行的上面一行。<br>命令：<code>sed &#39;=&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-line-number.png" alt=""></p><h3 id="l命令打印不可打印的ACSII字符"><a href="#l命令打印不可打印的ACSII字符" class="headerlink" title="l命令打印不可打印的ACSII字符"></a><strong>l命令打印不可打印的ACSII字符</strong></h3><p>l命令（list）可以打印数据流中的文本和不可打印的ASCII字符，任何不可打印的字符要么在其八进制值前加一个反斜线，要么使用标准C风格的命令法，比如\t，开代表制表符。<br>描述：打印制表符。<br>命令：<code>sed -n &#39;l&#39; tab</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-l.png" alt=""></p><h3 id="w写入文件"><a href="#w写入文件" class="headerlink" title="w写入文件"></a><strong>w写入文件</strong></h3><p>w命令用来向文件写入行，该命令格式如下：</p><p><code>[address]w filename</code></p><p>描述：替换所有的单词a变为A，w标志可以将sed执行结果输出到文件中。<br>命令：<code>echo &quot;Fire is a good servant but a bad master.&quot; | sed &#39;s/\ba\b/A/gw sed.out&#39;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-s-w.png" alt=""></p><h3 id="r从文件读取数据"><a href="#r从文件读取数据" class="headerlink" title="r从文件读取数据"></a><strong>r从文件读取数据</strong></h3><p>r命令用来将一个独立文件中的数据插入到数据流中，该命令格式如下：<br><code>[address]r filename</code><br>filename参数指定了数据文件的绝对路径或相对路径。读取命令中使用的地址区间只能指定单独一个行号或文本模式地址。sed编辑器会将文件中的文本插入到指定地址后。</p><p>描述：将tab文件的内容插入到mydata文件中，具体插入在匹配模式first的行的后面。<br>命令：<code>sed &#39;/first/r tab&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-r.png" alt=""></p><p>描述：将tab文件的内容插入到mydata文件中，具体插入在匹配模式first的行的后面。<br>命令：<br><code>sed &#39;/LIST/ {r detail.txtd}</code><br><code>sed -f placehold.sed placehold</code><br>源文件：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-placehold.png" alt=""><br>sed脚本文件：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-placehold-script.png" alt=""><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-placehold-f.png" alt=""></p><h3 id="保持空间"><a href="#保持空间" class="headerlink" title="保持空间"></a><strong>保持空间</strong></h3><p>模式空间（pattern space）是一块活跃的缓冲区，在sed编辑器执行命令时它会保存待检查文本。保持空间（hold space）是sed编辑器的另一块缓冲区域，在处理模式空间中的某些行时，可以用保持空间来临时保存一些行。</p><table><thead><tr><th style="text-align:left">命 令</th><th style="text-align:left">说 明</th></tr></thead><tbody><tr><td style="text-align:left">h</td><td style="text-align:left">将模式空间复制到保持空间</td></tr><tr><td style="text-align:left">H</td><td style="text-align:left">将模式空间追加到保持空间</td></tr><tr><td style="text-align:left">g</td><td style="text-align:left">将保持空间复制到模式空间</td></tr><tr><td style="text-align:left">G</td><td style="text-align:left">将保持空间追加到模式空间</td></tr><tr><td style="text-align:left">x</td><td style="text-align:left">交换保持空间与模式空间的内容</td></tr></tbody></table><p>描述：用h和g目录将数据在sed编辑器缓冲空间之间移动。<br>命令：<code>sed -n &#39;/first/ { h; p; n; p; g; p }&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-hold-space.png" alt=""></p><p>描述：将第一个数据行输出到第二个数据行的后面。<br>命令：<code>sed -n &#39;/first/ { h; n; p; g; p }&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-hold-space-switch.png" alt=""></p><h3 id="命令排除"><a href="#命令排除" class="headerlink" title="!命令排除"></a><strong>!命令排除</strong></h3><p>描述：排除匹配模式header的行，感叹号（!)命令用来排除，让原本会起作用的命令不起作用，原本不起作用反而其作用。<br>命令：<code>sed -n &#39;/header/!p&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-exclude.png" alt=""></p><p>描述：将文件的内容反转。<br>命令：<code></code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-exclude.png" alt=""></p><h3 id="b改变流"><a href="#b改变流" class="headerlink" title="b改变流"></a><strong>b改变流</strong></h3><p>分支（branch）命令b可以基于地址、地址模式或地址区间排除一整块命令。这样就可以对数据流中的特定行执行一组命令。分支（branch）命令b的格式如下：</p><p><code>[address]b [label]</code><br>address参数决定了哪些行的数据会触发分支命令。label参数定义了要跳转到的位置。如果没有加label参数，跳转命令会跳转到脚本的结尾。</p><p>描述：分支命令在数据流中的第2行和第3行处跳过了两个替换命令。<br>命令：<code>sed &#39;{2,3b; s/This is/Is this/; s/line./test?/}&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-b.png" alt=""></p><p>如果不行直接跳到脚本的结尾，可以为分支命令定义一个要跳转的标签，定义跳转的标签以冒号开始，最多是7个字符长度。要指定标签，加到b命令后即可。标签可以跳过地址匹配出的命令，但任然执行脚本中的其他命令。</p><p>描述：如果出现匹配模式first的行，程序应该跳到标签为jump1的脚本行。如果分支命令的模式没有匹配，sed编辑器会继续执行脚本中的命令，包括分支标签后的命令。（所有的s替换命令都会在不匹配分支模式的行上执行）。<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;&#123;/first/b jump1; s/This is the/No jump on/</span><br><span class="line">:jump1</span><br><span class="line">s/This is the/Jump here on/&#125;&apos; mydata</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-label.png" alt=""></p><p>描述：使用分支标签达到循环的效果。<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;This, is, a, test, to, remove, commas.&quot; | sed -n &apos;&#123;</span><br><span class="line">:start</span><br><span class="line">s/,//1p</span><br><span class="line">b start</span><br><span class="line">&#125;&apos;</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-infinite-loop.png" alt=""></p><p>描述：上面的脚本永远不会结束，在分支命令之前指定一个/,/地址模式，如果没有找到匹配，跳转就应该结束。<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;This, is, a, test, to, remove, commas.&quot; | sed -n &apos;&#123;</span><br><span class="line">:start</span><br><span class="line">s/,//1p</span><br><span class="line">/,/b start</span><br><span class="line">&#125;&apos;</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-limit-loop.png" alt=""></p><h3 id="t测试命令"><a href="#t测试命令" class="headerlink" title="t测试命令"></a><strong>t测试命令</strong></h3><p>描述：匹配模式first的行，如果匹配上则不会执行第二个替换命令。反之，则执行之。<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;&#123;</span><br><span class="line">s/first/matched/</span><br><span class="line">t</span><br><span class="line">s/This is the/No match on/</span><br><span class="line">&#125;&apos; mydata</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-t.png" alt=""></p><p>描述：匹配模式first的行，如果匹配上则不会执行第二个替换命令。反之，则执行之。<br>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;&#123;</span><br><span class="line">s/first/matched/</span><br><span class="line">t</span><br><span class="line">s/This is the/No match on/</span><br><span class="line">&#125;&apos; mydata</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-t-limit-loop.png" alt=""></p><h3 id="使用包装脚本"><a href="#使用包装脚本" class="headerlink" title="使用包装脚本"></a><strong>使用包装脚本</strong></h3><p>描述：将脚本封装进shell包装脚本（wrapper），执行之前需要赋予执行权限。$1代表从命令行提取第一个参数，在这里就是需要进行反转的文件名。<br>命令：<code>sed -n &#39;{ 1!G; h; $p}&#39; $1</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-reverse-sh.png" alt=""><br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-run-reverse.png" alt=""></p><h3 id="重定向sed的输出"><a href="#重定向sed的输出" class="headerlink" title="重定向sed的输出"></a><strong>重定向sed的输出</strong></h3><p>描述：使用$()将sed编辑器命令的输出重定向到一个变量中，以备后用。<br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-script-fact.png" alt=""></p><h3 id="加倍行间距"><a href="#加倍行间距" class="headerlink" title="加倍行间距"></a><strong>加倍行间距</strong></h3><p>描述：G命令会简单将保持空间内容附加到模式空间内容后，当启动sed编辑器时，保持空间只有一个空行。将它附加到已有行后面，就在已有行后面创建了一个空白行。<br>命令：<code>sed &#39;G&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-G.png" alt=""></p><p>描述：去掉上例中最后一行的空格。$和!结合表示一旦达到文件最后一行，就不执行G命令操作。<br>命令：<code>sed &#39;$!G&#39; mydata</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-G-clean-end.png" alt=""></p><h3 id="对可能含有空白行的文件加倍行间距"><a href="#对可能含有空白行的文件加倍行间距" class="headerlink" title="对可能含有空白行的文件加倍行间距"></a><strong>对可能含有空白行的文件加倍行间距</strong></h3><p>描述：去掉上例中最后一行的空格。<br>命令：<code>sed &#39;{ /^$/d; $!G}&#39; mydata4</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sed/sed-clear-multiple-lines.png" alt=""></p><h2 id="生产环境案例"><a href="#生产环境案例" class="headerlink" title="生产环境案例"></a>生产环境案例</h2><h3 id="替换指定目录所有文件中匹配的字符串"><a href="#替换指定目录所有文件中匹配的字符串" class="headerlink" title="替换指定目录所有文件中匹配的字符串"></a><strong>替换指定目录所有文件中匹配的字符串</strong></h3><p>描述：将当前目录下所有文件中出现字符串p9xqnn501的地方，全部替换为pabfn7ecx，并直接修改原始文件。<br>命令：<code>sed -i &#39;&#39; &#39;s/p9xqnn501/pabfn7ecx/g&#39; *</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/echo/echo.png" alt=""></p><h3 id="删除空格"><a href="#删除空格" class="headerlink" title="删除空格"></a><strong>删除空格</strong></h3><p>描述：删除每行开头的空格。<br>命令：<br><code>sed &#39;s/^[ ]*//&#39; mydata</code><br><code>sed &#39;s/^[[:space:]]*//&#39; mydata</code></p><h3 id="删除空行和开头的-注释"><a href="#删除空行和开头的-注释" class="headerlink" title="删除空行和开头的#注释"></a><strong>删除空行和开头的#注释</strong></h3><p>描述：删除空行和开头的#注释<br>命令：<br><code>sed -e &#39;s/^#//; s/^$//&#39; mydataΩ</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sed命令一个流式编辑器，它可以对文本流、指定文件集或标准输入进行文本编辑。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.iweeek.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux curl用法详解</title>
    <link href="http://www.iweeek.com/2018/06/23/daily-command-curl/"/>
    <id>http://www.iweeek.com/2018/06/23/daily-command-curl/</id>
    <published>2018-06-23T00:35:29.000Z</published>
    <updated>2018-06-23T14:31:46.308Z</updated>
    
    <content type="html"><![CDATA[<p>curl命令是一个利用URL规则在命令行下工作的文件传输工具。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>curl命令是一个利用URL规则在命令行下工作的文件传输工具。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/kill/kill-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><p><strong>实例：查看网页源码</strong><br>描述：查看网页源码。<br>命令：<code>curl www.sina.com</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/df/df.png" alt=""></p><p>curl -o [文件名] <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a> -o参数把这个网页保存下来，相当于使用wget命令。<br><strong>实例：自动跳转</strong><br>curl -L <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a> 有的网址会自动跳转的，-L参数会跳转新的网址。<br><strong>实例：显示头信息</strong><br>curl -i <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a> -i参数可以显示http response的头信息，连同网页代码一起。-I参数则只显示http response头信息。<br><strong>实例：显示通信过程</strong><br>curl -v <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a> -v参数可以显示一次http通信的整个过程，包括端口连接和http request头信息。<br>curl –trace output.txt <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a> 查看更详细的通信过程<br>curl –trace-ascii output.txt <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a><br><strong>实例：发送表单信息</strong><br>curl example.com/form.cgi?data=xxx 发送表单信息有GET和POST两种方法，GET相对简单，把数据附在网址后面。<br>curl -X POST –data “data=xxx” example.com/form.cgi POST方法必须把数据和网址分开，curl要用到–data参数。<br>curl -X POST–data-urlencode “date=April 1” example.com/form.cgi curl的–data-urlencode参数可以为表单编码。<br><strong>实例：HTTP动词</strong><br>curl默认的HTTP动词是GET，使用-X可以支持其他动词。<br>curl -X POST <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a><br>curl -X DELETE ww.example.com<br><strong>实例：文件上传</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">'multipart/form-data'</span> <span class="attr">action</span>=<span class="string">"upload.cgi"</span>&gt;</span></span><br><span class="line">　　　　<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">file</span> <span class="attr">name</span>=<span class="string">upload</span>&gt;</span></span><br><span class="line">　　　　<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">press</span> <span class="attr">value</span>=<span class="string">"OK"</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>curl –form upload=@localfilename –form press=OK [URL]<br><strong>实例：Referer字段</strong><br>curl –referer <a href="http://www.example.com" target="_blank" rel="noopener">http://www.example.com</a> <a href="http://www.example.com" target="_blank" rel="noopener">http://www.example.com</a> 在http request头信息中，提供一个referer字段，表示从哪里跳转过来的。<br><strong>实例：User Agent字段</strong><br>curl –user-agent “[User Agent]” [URL]<br><strong>实例：cookie</strong><br>curl –cookie “name=xxx” <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> 让curl发送cookie<br>curl -c cookies <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a> 保存服务器返回的cookie到文件<br>curl -b cookies <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a> 使这个文件作为cookie信息，作为后续的请求。<br><strong>实例：增加头信息</strong><br>curl –header “Content-Type:application/json” <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a><br><strong>实例：HTTP认证</strong><br>curl –user name:password example.com 有些网域需要HTTP认证，这时curl需要用到–user参数。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;curl命令是一个利用URL规则在命令行下工作的文件传输工具。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.iweeek.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux kill命令用法详解</title>
    <link href="http://www.iweeek.com/2018/06/23/daily-command-kill/"/>
    <id>http://www.iweeek.com/2018/06/23/daily-command-kill/</id>
    <published>2018-06-22T23:33:18.000Z</published>
    <updated>2018-06-23T00:34:42.809Z</updated>
    
    <content type="html"><![CDATA[<p>kill命令用来删除执行中的程序或工作。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>kill命令用来删除执行中的程序或工作。kill可将指定的信息送至程序。预设的信息为SIGTERM(15),可将指定程序终止。若仍无法终止该程序，可使用SIGKILL(9)信息尝试强制删除程序。程序或工作的编号可利用ps指令或job指令查看。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/kill/kill-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>kill [signal or option] PID(s)</code></p><p>表: kill命令的信号名</p><table><thead><tr><th style="text-align:left">信号</th><th style="text-align:left">信号值</th><th style="text-align:left">行为</th></tr></thead><tbody><tr><td style="text-align:left">SIGHUP</td><td style="text-align:left">1</td><td style="text-align:left">挂起</td></tr><tr><td style="text-align:left">SIGKILL</td><td style="text-align:left">9</td><td style="text-align:left">杀死信号</td></tr><tr><td style="text-align:left">SIGTERM</td><td style="text-align:left">15</td><td style="text-align:left">终止</td></tr></tbody></table><p>SIGTERM是杀死进程默认和最安全的方式，SIGHUP次之。SIGKILL是最不安全的方式，它将杀死一个没有完全保存的进程。</p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><ul><li>-a：当处理当前进程时，不限制命令名和进程号的对应关系。</li><li>-l &lt;信号编号&gt;：若不加&lt;信号编号&gt;选项，则-l参数会列出全部的信号名称。</li><li>-p：指定kill 命令只打印相关进程的进程号，而不发送任何信号。</li><li>-s &lt;信号名称或编号&gt;：指定要送出的信息。</li><li>-i：交互式的终止进程。</li><li>-I：忽略大小写。</li><li>-u：指定用户。</li></ul><h2 id="kill的执行范围"><a href="#kill的执行范围" class="headerlink" title="kill的执行范围"></a>kill的执行范围</h2><ul><li>用户可以杀死他的所有进程。</li><li>用户不能杀死另一个用户的进程。</li><li>用户无法终止系统正在使用的进程。</li><li>root用户可以终止系统级进程和任何用户的进程。</li></ul><h3 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a><strong>杀死进程</strong></h3><p>描述：用pgrep找出进程PID，并用kill终止PID为2807的进程。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># pgrep mysql</span><br><span class="line">2807</span><br><span class="line"># kill -9 2807</span><br></pre></td></tr></table></figure></p><p>说明：使用<code>kill -9 PID</code>与<code>kill -SIGKILL PID</code>类似。</p><h3 id="使用进程名称杀死进程"><a href="#使用进程名称杀死进程" class="headerlink" title="使用进程名称杀死进程"></a><strong>使用进程名称杀死进程</strong></h3><p>描述：pkill命令后直接加上进程名即可杀死该进程，但在杀死之前，最好先确认进程名称是否正确。<br>命令：<br><code>pkill mysql</code></p><p>描述：为了避免kill掉错误的进程，也可以通过下面命令来匹配进程名称。<br>命令：<br><code>pgrep -l ssh</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ps/ps-pgrep-l.png" alt=""></p><h3 id="killall杀死多个进程"><a href="#killall杀死多个进程" class="headerlink" title="killall杀死多个进程"></a><strong>killall杀死多个进程</strong></h3><p>描述：一次杀死多个进程。<br>命令：<br><code>kill PID1 PID2 PID3</code><br><code>kill -9 PID1 PID2 PID3</code><br><code>kill -SIGKILL PID1 PID2 PID3</code></p><p>描述：killall用进程名替代PID，并且会kill掉所有的同名进程。<br>语法：<code>killall [signal or option] Process name</code><br>命令：<code>killall mysqld</code><br>检查：验证进程是否处于运行状态。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> service mysql status</span><br><span class="line"><span class="meta">#</span> pgrep mysql</span><br><span class="line"><span class="meta">#</span> ps -aux | grep mysql</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;kill命令用来删除执行中的程序或工作。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.iweeek.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux mkdir总结</title>
    <link href="http://www.iweeek.com/2018/06/22/linux/daily-command-mkdir/"/>
    <id>http://www.iweeek.com/2018/06/22/linux/daily-command-mkdir/</id>
    <published>2018-06-22T09:33:12.000Z</published>
    <updated>2018-06-22T06:32:02.985Z</updated>
    
    <content type="html"><![CDATA[<p>mkdir命令用来创建目录和子目录。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>mkdir命令用来创建目录和子目录，如果目录还不存在，则创建之。<br><img src="http://pabfn7ecx.bkt.clouddn.com/mkdir/mkdir-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>mkdir [OPTION]... DIRECTORY...</code></p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">m&lt;目标属性&gt;或–mode&lt;目标属性&gt;</td><td style="text-align:left">建立目录的同时设置目录的权限</td></tr><tr><td style="text-align:left">p或–parents</td><td style="text-align:left">若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录</td></tr><tr><td style="text-align:left">v</td><td style="text-align:left">列出已经被创建的目录</td></tr></tbody></table><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="运行mkdir命令"><a href="#运行mkdir命令" class="headerlink" title="运行mkdir命令"></a><strong>运行mkdir命令</strong></h3><p>描述：在~下创建mk目录，如果目录已存在，会提示无法创建它。<br>命令：<code>mkdir mk</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/mkdir/mkdir.png" alt=""></p><p>描述：创建目录的首要条件是，在创建目录的目标路径下你必须具有访问权限。<br>命令：<code>mkdir mk</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/mkdir/mkdir-permission.png" alt=""></p><h3 id="创建多个目录"><a href="#创建多个目录" class="headerlink" title="创建多个目录"></a><strong>创建多个目录</strong></h3><p>描述：同时创建foo、bar、baz三个目录。<br>命令：<code>mkdir foo bar baz</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/mkdir/mkdir-multiple-file.png" alt=""></p><h3 id="递归创建目录"><a href="#递归创建目录" class="headerlink" title="递归创建目录"></a><strong>递归创建目录</strong></h3><p>描述：创建具有子目录层级的目录，如果父目录找不到，使用-p选项可以递归创建目录，包括父目录。<br>命令：<br><code>mkdir -p word/more</code><br><code>ls -R</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/mkdir/mkdir-R.png" alt=""></p><h3 id="设置访问权限"><a href="#设置访问权限" class="headerlink" title="设置访问权限"></a><strong>设置访问权限</strong></h3><p>描述：创建一个名为foo的目录，同时为目录所有者、用户组和其他用户针对该目录赋予只读权限。-m选项可以设置新目录的权限。<br>命令：<code>mkdir -m=r-- foo</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/mkdir/mkdir-m.png" alt=""></p><h3 id="打印创建目录的过程信息"><a href="#打印创建目录的过程信息" class="headerlink" title="打印创建目录的过程信息"></a><strong>打印创建目录的过程信息</strong></h3><p>描述：-v选项可以查看创建目录的过程。<br>命令：<code>mkdir -v foo bar baz</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/mkdir/mkdir-v.png" alt=""></p><h3 id="创建复杂的目录树"><a href="#创建复杂的目录树" class="headerlink" title="创建复杂的目录树"></a><strong>创建复杂的目录树</strong></h3><p>描述：实现下面的目录树结构，用{}来创建层级目录，只要一行命令来实现。然后使用apt或yum安装tree软件包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># cd /home/#USER/Desktop</span><br><span class="line"># mkdir tecmint</span><br><span class="line"># mkdir tecmint/etc</span><br><span class="line"># mkdir tecmint/lib</span><br><span class="line"># mkdir tecmint/usr</span><br><span class="line"># mkdir tecmint/bin</span><br><span class="line"># mkdir tecmint/tmp</span><br><span class="line"># mkdir tecmint/opt</span><br><span class="line"># mkdir tecmint/var</span><br><span class="line"># mkdir tecmint/etc/x1</span><br><span class="line"># mkdir tecmint/usr/x2</span><br><span class="line"># mkdir tecmint/usr/x3</span><br><span class="line"># mkdir tecmint/tmp/Y1</span><br><span class="line"># mkdir tecmint/tmp/Y2</span><br><span class="line"># mkdir tecmint/tmp/Y3</span><br><span class="line"># mkdir tecmint/tmp/Y3/z</span><br></pre></td></tr></table></figure><p>命令：<code>mkdir -p /home/$USER/iweeek/{etc/x1,lib,usr/{x2,x3},bin,tmp/{Y1,Y2,Y3/z},opt,var}</code><br><code>tree /home/$USER/iweeek</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/mkdir/mkdir-tree.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mkdir命令用来创建目录和子目录。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.iweeek.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux stat总结</title>
    <link href="http://www.iweeek.com/2018/06/21/linux/daily-command-stat/"/>
    <id>http://www.iweeek.com/2018/06/21/linux/daily-command-stat/</id>
    <published>2018-06-20T17:14:22.000Z</published>
    <updated>2018-06-22T01:07:12.200Z</updated>
    
    <content type="html"><![CDATA[<p>stat命令用来显示文件或文件系统的状态。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>stat命令用来显示文件或文件系统的状态。stat命令从文件的索引节点获取信息，它们包括文件类型的信息，八进制访问权限和人类可读形式的权限，SELinux安全上下文字符串，文件创建时间，上次访问时间，上次数据修改时间，上次状态改变时间以及Epoch以来的秒数等等。因此，stat命令的输出信息比ls命令的输出信息要更详细。见touch命令。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>stat [OPTION]… FILE…</p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><ul><li>-c或–format：使用特定或自定义格式而不是默认格式，在每一行结束之后打印一个新行。</li><li>-L：支持符号连接。</li><li>-f：显示文件系统状态而非文件状态。</li><li>–printf：类似于format，但它能够解释反斜线转义，并关闭后续换行符的打印，可以手动添加\n打印新行。</li><li>-t：以简洁方式输出信息。</li><li>–help：显示指令的帮助信息。</li><li>–version：显示指令的版本信息。</li></ul><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="stat显示更多信息"><a href="#stat显示更多信息" class="headerlink" title="stat显示更多信息"></a><strong>stat显示更多信息</strong></h3><p>描述：使用ls命令的长列表模式和使用stat命令查看文件信息。<br>命令：<br><code>ls -l names.txt</code><br><code>stat names.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-ls.png" alt=""><br>说明：图中，文件状态改变和文件修改的日期/时间是相同的，而访问时间是更近的时间。文件使用了8个块，以两个格式显示文件权限，八进制（0664）和-rw-rw-r–格式。在第三行显示索引为393342，文件没有其他硬链接（Links:1）。这个文件是一个常规文件。</p><h3 id="显示文件系统的状态"><a href="#显示文件系统的状态" class="headerlink" title="显示文件系统的状态"></a><strong>显示文件系统的状态</strong></h3><p>描述：f选项将显示指定文件系统的信息。需要提供一个目录/文件系统作为参数。<br>命令：<br><code>stat -f /dev/vda1</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-file-system.png" alt=""></p><h3 id="重命名改变状态时间"><a href="#重命名改变状态时间" class="headerlink" title="重命名改变状态时间"></a><strong>重命名改变状态时间</strong></h3><p>描述：重命名文件将会改变状态时间，即ctime。文件创建的时候ctime存储文件的创建日期和时间，修改文件后就变为记录文件的状态改动时间。<br>命令：<br><code>mv fairy fairy2</code><br><code>stat fairy2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-mv.png" alt=""></p><h3 id="查看多个文件"><a href="#查看多个文件" class="headerlink" title="查看多个文件"></a><strong>查看多个文件</strong></h3><p>描述：使用通配符查看多个文件的状态。<br>命令：<code>stat t*</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-wild.png" alt=""></p><h3 id="用ls获取额外的信息"><a href="#用ls获取额外的信息" class="headerlink" title="用ls获取额外的信息"></a><strong>用ls获取额外的信息</strong></h3><p>描述：ls的u选项显示最后访问时间，c选项显示状态改动时间。<br>命令：<br><code>ls -lu fairy2</code><br><code>ls -lc fairy2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-ls-u-c.png" alt=""></p><h3 id="用ls获取额外的信息-1"><a href="#用ls获取额外的信息-1" class="headerlink" title="用ls获取额外的信息"></a><strong>用ls获取额外的信息</strong></h3><p>描述：ls的u选项显示最后访问时间，c选项显示状态改动时间。<br>命令：<br><code>ls -lu fairy2</code><br><code>ls -lc fairy2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-ls-u-c.png" alt=""></p><h3 id="显示指定的信息"><a href="#显示指定的信息" class="headerlink" title="显示指定的信息"></a><strong>显示指定的信息</strong></h3><p>--format选项可以单独显示具体的信息。可用的选项如下：</p><p>表: 文件的格式序列</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">%a</td><td style="text-align:left">八进制表示的访问权限</td></tr><tr><td style="text-align:left">%A</td><td style="text-align:left">可读格式表示的访问权限</td></tr><tr><td style="text-align:left">%b</td><td style="text-align:left">分配的块数（参见%B）</td></tr><tr><td style="text-align:left">%B</td><td style="text-align:left">%b参数显示的每个块的字节数</td></tr><tr><td style="text-align:left">%d</td><td style="text-align:left">十进制表示的设备号</td></tr><tr><td style="text-align:left">%D</td><td style="text-align:left">十六进制表示的设备号</td></tr><tr><td style="text-align:left">%f</td><td style="text-align:left">十六进制表示的Raw模式</td></tr><tr><td style="text-align:left">%F</td><td style="text-align:left">文件类型</td></tr><tr><td style="text-align:left">%g</td><td style="text-align:left">属主的组ID</td></tr><tr><td style="text-align:left">%G</td><td style="text-align:left">属主的组名</td></tr><tr><td style="text-align:left">%h</td><td style="text-align:left">硬连接数</td></tr><tr><td style="text-align:left">%i</td><td style="text-align:left">Inode号</td></tr><tr><td style="text-align:left">%n</td><td style="text-align:left">文件名</td></tr><tr><td style="text-align:left">%N</td><td style="text-align:left">如果是符号链接，显示器所链接的文件名</td></tr><tr><td style="text-align:left">%o</td><td style="text-align:left">I/O块大小</td></tr><tr><td style="text-align:left">%s</td><td style="text-align:left">全部占用的字节大小</td></tr><tr><td style="text-align:left">%t</td><td style="text-align:left">十六进制的主设备号</td></tr><tr><td style="text-align:left">%T</td><td style="text-align:left">十六进制的副设备号</td></tr><tr><td style="text-align:left">%u</td><td style="text-align:left">属主的用户ID</td></tr><tr><td style="text-align:left">%U</td><td style="text-align:left">属主的用户名</td></tr><tr><td style="text-align:left">%x</td><td style="text-align:left">最后访问时间</td></tr><tr><td style="text-align:left">%X</td><td style="text-align:left">最后访问时间，自Epoch开始的秒数</td></tr><tr><td style="text-align:left">%y</td><td style="text-align:left">最后修改时间</td></tr><tr><td style="text-align:left">%Y</td><td style="text-align:left">最后修改时间，自Epoch开始的秒数</td></tr><tr><td style="text-align:left">%z</td><td style="text-align:left">最后改变时间</td></tr><tr><td style="text-align:left">%Z</td><td style="text-align:left">最后改变时间，自Epoch开始的秒数</td></tr></tbody></table><p>表: 文件系统的格式序列</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">%a</td><td style="text-align:left">普通用户可用的块数</td></tr><tr><td style="text-align:left">%b</td><td style="text-align:left">文件系统的全部数据块数</td></tr><tr><td style="text-align:left">%c</td><td style="text-align:left">文件系统的全部文件节点数</td></tr><tr><td style="text-align:left">%d</td><td style="text-align:left">文件系统的可用文件节点数</td></tr><tr><td style="text-align:left">%f</td><td style="text-align:left">文件系统的可用节点数</td></tr><tr><td style="text-align:left">%C</td><td style="text-align:left">SELinux的安全上下文</td></tr><tr><td style="text-align:left">%i</td><td style="text-align:left">十六进制表示的文件系统ID</td></tr><tr><td style="text-align:left">%l</td><td style="text-align:left">文件名的最大长度</td></tr><tr><td style="text-align:left">%n</td><td style="text-align:left">文件系统的文件名</td></tr><tr><td style="text-align:left">%s</td><td style="text-align:left">块大小（用于更快的传输）</td></tr><tr><td style="text-align:left">%S</td><td style="text-align:left">基本块大小（用于块计数）</td></tr><tr><td style="text-align:left">%t</td><td style="text-align:left">十六进制表示的文件系统类型</td></tr><tr><td style="text-align:left">%T</td><td style="text-align:left">可读格式表示的文件系统类型</td></tr></tbody></table><p>描述：–format选项可以一次显示所有指定的信息。例如只查看文件类型，和硬链接数。<br>命令：<br><code>stat --format=%F %h fairy2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-F-h.png" alt=""></p><p>描述：以两种格式查看权限，查看文件的最后访问时间，自Epoch开始的秒数，还查看了文件的属主。–format或-c选项可以打印特定或自定义格式，在每一行结束之后打印一个新行。<br>命令：<br><code>stat --format=%a fairy2</code><br><code>stat --format=%A fairy2</code><br><code>stat --format=%X fairy2</code><br><code>stat --format=%U fairy2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-format.png" alt=""></p><p>描述：以两种格式查看权限，查看文件的最后访问时间，自Epoch开始的秒数，还查看了文件的属主。–printf类似于format，但它能够解释反斜线转义，并关闭后续换行符的打印，可以手动添加\n打印新行。<br>命令：<br><code>stat --printf=&quot;%a\n&quot; fairy2</code><br><code>stat --printf=&quot;%A\n&quot; fairy2</code><br><code>stat --printf=&quot;%X\n&quot; fairy2</code><br><code>stat --printf=&quot;%U\n&quot; fairy2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/stat/stat-printf.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;stat命令用来显示文件或文件系统的状态。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.iweeek.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Liunx wc总结</title>
    <link href="http://www.iweeek.com/2018/06/20/linux/daily-command-wc/"/>
    <id>http://www.iweeek.com/2018/06/20/linux/daily-command-wc/</id>
    <published>2018-06-19T16:43:34.000Z</published>
    <updated>2018-06-19T17:39:21.204Z</updated>
    
    <content type="html"><![CDATA[<p>wc命令可以计算文件的新行、字符数、字节数。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>wc命令可以计算文件的新行、字符数、字节数。如果指定多于一个文件，也列出总的行数。单词是由空格分隔的非零长度的字符序列。如果没有指定文件，或当文件为-，则读取标准输入。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/wc/wc-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>wc [OPTION]… [FILE]…<br>wc [OPTION]… –files0-from=F</p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><ul><li>-c或–bytes或——chars：只显示Bytes数；</li><li>-l或——lines：只显示列数；</li><li>-w或——words：只显示字数。</li><li>-m或——chars：只显示字符数。</li><li>-L或–max-line-length：打印最长行的长度。</li><li>–files0-from=F：从文件读取文件名，文件名应该是NUL-terminated空字符结尾。如果是-则从标准输入中读取。</li></ul><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="打印字节数"><a href="#打印字节数" class="headerlink" title="打印字节数"></a><strong>打印字节数</strong></h3><p>描述：打印letter文件的行数，字符数，字节数和文件名。默认没有参数。<br>命令：<code>wc letter</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/wc/wc.png" alt=""></p><h3 id="打印字节数-1"><a href="#打印字节数-1" class="headerlink" title="打印字节数"></a><strong>打印字节数</strong></h3><p>描述：打印file.txt文件的字节数，包含29个字节。-c选项打印字节数。<br>命令：<code>wc -c file.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/wc/wc-c.png" alt=""></p><h3 id="打印字符数"><a href="#打印字符数" class="headerlink" title="打印字符数"></a><strong>打印字符数</strong></h3><p>描述：打印file.txt文件的字符数，包含29个字符。-m选项打印字符数。<br>命令：<code>wc -m file.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/wc/wc-m.png" alt=""></p><h3 id="打印换行数"><a href="#打印换行数" class="headerlink" title="打印换行数"></a><strong>打印换行数</strong></h3><p>描述：打印file.txt文件中的新行数，包含4行。-l选项打印新行数。<br>命令：<code>wc -l file.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/wc/wc-l.png" alt=""></p><h3 id="打印单词数"><a href="#打印单词数" class="headerlink" title="打印单词数"></a><strong>打印单词数</strong></h3><p>描述：打印file.txt文件中的单词数，包含6个单子。-w选项打印单词数。<br>命令：<code>wc -w file.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/wc/wc-w.png" alt=""></p><h3 id="打印最长行长度"><a href="#打印最长行长度" class="headerlink" title="打印最长行长度"></a><strong>打印最长行长度</strong></h3><p>描述：打印file.txt文件中的最长行的长度，最长行长度为11。-L选项打印输入文件中最长行的长度。<br>命令：<code>wc -L file.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/wc/wc-width-L.png" alt=""></p><h3 id="统计目录中文件或目录的数量"><a href="#统计目录中文件或目录的数量" class="headerlink" title="统计目录中文件或目录的数量"></a><strong>统计目录中文件或目录的数量</strong></h3><p>描述：统计目录中文件夹和文件的数量。ls -1将每个文件夹或文件放在新行上，然后通过wc -l来计算换行数。<br>命令：<code>ls -1 | wc -l</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/wc/wc-pipe.png" alt=""></p><h3 id="更多命令信息"><a href="#更多命令信息" class="headerlink" title="更多命令信息"></a><strong>更多命令信息</strong></h3><p><img src="http://pabfn7ecx.bkt.clouddn.com/wc/wc-more-detail.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;wc命令可以计算文件的新行、字符数、字节数。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.iweeek.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux date总结</title>
    <link href="http://www.iweeek.com/2018/06/19/linux/daily-command-date/"/>
    <id>http://www.iweeek.com/2018/06/19/linux/daily-command-date/</id>
    <published>2018-06-19T08:10:19.000Z</published>
    <updated>2018-06-19T16:41:23.668Z</updated>
    
    <content type="html"><![CDATA[<p>date命令用来显示或设置系统时间与日期。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>date命令用来显示或设置系统时间与日期。date命令可以打印不同格式的时间或日期，被用来根据时间和日期执行操作。<br>在类UNIX系统中，日期被存储为一个整数，其大小为自世界标准时间（UTC）1970年1月1日0时0分0秒起流逝的秒数。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>date [OPTION]... [+FORMAT]</code><br><code>date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]</code></p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><p>表1: 命令参数</p><table><thead><tr><th style="text-align:left">参 数</th><th style="text-align:left">描 述</th></tr></thead><tbody><tr><td style="text-align:left">-d</td><td style="text-align:left">显示字符串描述的时间</td></tr><tr><td style="text-align:left">-f</td><td style="text-align:left">显示DATEFILE文件中的每行时间</td></tr><tr><td style="text-align:left">-r</td><td style="text-align:left">显示文件的最后修改时间</td></tr><tr><td style="text-align:left">-R</td><td style="text-align:left">以RFC-2822兼容日期格式显示时间</td></tr><tr><td style="text-align:left">-rfc-2822</td><td style="text-align:left">以RFC-2822兼容日期格式显示时间</td></tr><tr><td style="text-align:left">-s</td><td style="text-align:left">根据字符串来设置日期与时间</td></tr><tr><td style="text-align:left">-u</td><td style="text-align:left">显示或设定为Coordinated Universal Time时间格式（UTC）</td></tr><tr><td style="text-align:left">–help</td><td style="text-align:left">显示date命令的帮助信息</td></tr><tr><td style="text-align:left">–version</td><td style="text-align:left">显示date命令的版本信息</td></tr></tbody></table><p>表2: Format参数格式</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">%%</td><td style="text-align:left">显示字符%</td></tr><tr><td style="text-align:left">%a</td><td style="text-align:left">星期几的缩写(Sun..Sat)</td></tr><tr><td style="text-align:left">%A</td><td style="text-align:left">星期几的完整名称（Sunday…Saturday）</td></tr><tr><td style="text-align:left">%b</td><td style="text-align:left">月份的缩写(Jan..Dec)</td></tr><tr><td style="text-align:left">%B</td><td style="text-align:left">月份的完整名称(January..December)</td></tr><tr><td style="text-align:left">%c</td><td style="text-align:left">日期与时间。只输入date指令也会显示同样的结果</td></tr><tr><td style="text-align:left">%C</td><td style="text-align:left">世纪(年份除100后去整) [00-99]</td></tr><tr><td style="text-align:left">%d</td><td style="text-align:left">日期(以01-31来表示)。</td></tr><tr><td style="text-align:left">%D</td><td style="text-align:left">日期(含年月日)。</td></tr><tr><td style="text-align:left">%e</td><td style="text-align:left">一个月的第几天 ( 1..31)</td></tr><tr><td style="text-align:left">%F</td><td style="text-align:left">日期，同%Y-%m-%d</td></tr><tr><td style="text-align:left">%g</td><td style="text-align:left">年份(yy)</td></tr><tr><td style="text-align:left">%G</td><td style="text-align:left">年份(yyyy)</td></tr><tr><td style="text-align:left">%h</td><td style="text-align:left">同%b</td></tr><tr><td style="text-align:left">%H</td><td style="text-align:left">小时(00..23)</td></tr><tr><td style="text-align:left">%I</td><td style="text-align:left">小时(01..12)</td></tr><tr><td style="text-align:left">%j</td><td style="text-align:left">一年的第几天(001..366)</td></tr><tr><td style="text-align:left">%k</td><td style="text-align:left">小时( 0..23)</td></tr><tr><td style="text-align:left">%l</td><td style="text-align:left">小时( 1..12)</td></tr><tr><td style="text-align:left">%m</td><td style="text-align:left">月份(01..12)</td></tr><tr><td style="text-align:left">%M</td><td style="text-align:left">分钟(00..59)</td></tr><tr><td style="text-align:left">%n</td><td style="text-align:left">换行</td></tr><tr><td style="text-align:left">%N</td><td style="text-align:left">纳秒(000000000..999999999)</td></tr><tr><td style="text-align:left">%p</td><td style="text-align:left">AM or PM</td></tr><tr><td style="text-align:left">%P</td><td style="text-align:left">am or pm</td></tr><tr><td style="text-align:left">%r</td><td style="text-align:left">12小时制时间(hh:mm:ss [AP]M)</td></tr><tr><td style="text-align:left">%R</td><td style="text-align:left">24小时制时间(hh:mm)</td></tr><tr><td style="text-align:left">%s</td><td style="text-align:left">从00:00:00 1970-01-01 UTC开始的秒数</td></tr><tr><td style="text-align:left">%S</td><td style="text-align:left">秒(00..60)</td></tr><tr><td style="text-align:left">%t</td><td style="text-align:left">制表符</td></tr><tr><td style="text-align:left">%T</td><td style="text-align:left">24小时制时间(hh:mm:ss)</td></tr><tr><td style="text-align:left">%u</td><td style="text-align:left">一周的第几天(1..7); 1 表示星期一</td></tr><tr><td style="text-align:left">%U</td><td style="text-align:left">一年的第几周，周日为每周的第一天(00..53)</td></tr><tr><td style="text-align:left">%V</td><td style="text-align:left">一年的第几周，周一为每周的第一天 (01..53)</td></tr><tr><td style="text-align:left">%w</td><td style="text-align:left">一周的第几天 (0..6); 0 代表周日</td></tr><tr><td style="text-align:left">%W</td><td style="text-align:left">一年的第几周，周一为每周的第一天(00..53)</td></tr><tr><td style="text-align:left">%x</td><td style="text-align:left">日期(mm/dd/yy)</td></tr><tr><td style="text-align:left">%X</td><td style="text-align:left">时间(%H:%M:%S)</td></tr><tr><td style="text-align:left">%y</td><td style="text-align:left">年份(00..99)</td></tr><tr><td style="text-align:left">%Y</td><td style="text-align:left">年份 (1970…)</td></tr><tr><td style="text-align:left">%z</td><td style="text-align:left">RFC-2822 风格数字格式时区(-0500)</td></tr><tr><td style="text-align:left">%:z</td><td style="text-align:left">以 +hh:mm 的数字格式表示时区 （如： -04:00）</td></tr><tr><td style="text-align:left">%::z</td><td style="text-align:left">以 +hh:mm:ss 的数字格式表示时区 （如： -04:00:00）</td></tr><tr><td style="text-align:left">%:::z</td><td style="text-align:left">以数字格式表示时区， 其中 : 的个数由你需要的精度来决定 （例如， -04， +05:30）</td></tr><tr><td style="text-align:left">%Z</td><td style="text-align:left">时区(e.g., EDT), 无法确定时区则为空</td></tr></tbody></table><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="显示UTC时间"><a href="#显示UTC时间" class="headerlink" title="显示UTC时间"></a><strong>显示UTC时间</strong></h3><p>描述：显示当前时间。<br>命令：<br><code>date</code><br><code>date -d now</code><br>描述：显示当前UTC时间，UTC意思是世界上最主要的时钟和时间的标准。<br>命令：<code>date -u</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-u-r.png" alt=""></p><h3 id="查找3周后的日期"><a href="#查找3周后的日期" class="headerlink" title="查找3周后的日期"></a><strong>查找3周后的日期</strong></h3><p>命令：<code>date -d &quot;3 weeks&quot;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-after-three-weeks.png" alt=""></p><h3 id="查找3周又4天后的日期"><a href="#查找3周又4天后的日期" class="headerlink" title="查找3周又4天后的日期"></a><strong>查找3周又4天后的日期</strong></h3><p>命令：<code>date -d &quot;3 weeks 4 days&quot;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-after-three-weeks-four-days.png" alt=""></p><h3 id="获取下个月的日期"><a href="#获取下个月的日期" class="headerlink" title="获取下个月的日期"></a><strong>获取下个月的日期</strong></h3><p>命令：<code>date -d &quot;next month&quot;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-after-one-month.png" alt=""></p><h3 id="获取上个星期天的日期"><a href="#获取上个星期天的日期" class="headerlink" title="获取上个星期天的日期"></a><strong>获取上个星期天的日期</strong></h3><p>命令：<code>date -d &quot;last sunday&quot;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-last-sunday.png" alt=""></p><h3 id="自定义日期格式"><a href="#自定义日期格式" class="headerlink" title="自定义日期格式"></a><strong>自定义日期格式</strong></h3><p>描述：要自定义日期格式，使用加号+。<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;-1day&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;+2day&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;+3hour&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;+30minute&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;+300second&quot;</span><br></pre></td></tr></table></figure></p><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-d.png" alt=""><br>说明：date命令会翻译所有的百分号（%）开头的格式和输出在引号(“”)内所有的内容。</p><h3 id="以yyyy-mm-dd的格式显示日期"><a href="#以yyyy-mm-dd的格式显示日期" class="headerlink" title="以yyyy-mm-dd的格式显示日期"></a><strong>以yyyy-mm-dd的格式显示日期</strong></h3><p>描述：%F的格式是yyyy-mm-dd，即%Y-%m-%d。<br>命令：<code>date +%F</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-F.png" alt=""></p><h3 id="只显示时间"><a href="#只显示时间" class="headerlink" title="只显示时间"></a><strong>只显示时间</strong></h3><p>描述：%T格式是 时:分:秒 的格式，即%H:%M:%S。<br>命令：<code>date +%T</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-T.png" alt=""></p><h3 id="显示今天是一年中的第几天"><a href="#显示今天是一年中的第几天" class="headerlink" title="显示今天是一年中的第几天"></a><strong>显示今天是一年中的第几天</strong></h3><p>命令：<code>date +%j</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-j.png" alt=""></p><h3 id="显示文件最后修改的时间"><a href="#显示文件最后修改的时间" class="headerlink" title="显示文件最后修改的时间"></a><strong>显示文件最后修改的时间</strong></h3><p>命令：<code>date -r date.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-r.png" alt=""></p><h3 id="显示文件中的时间"><a href="#显示文件中的时间" class="headerlink" title="显示文件中的时间"></a><strong>显示文件中的时间</strong></h3><p>描述：-f选项可以显示每行一个日期的文件。<br>命令：<code>date -f date.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-file.png" alt=""></p><h3 id="设置系统时间"><a href="#设置系统时间" class="headerlink" title="设置系统时间"></a><strong>设置系统时间</strong></h3><p>描述：使用-s或–set来设置系统日期和时间。注意，必须拥有root特权，否则会出错。<br>命令：<br><code>date -s &quot;2017-06-19 00:00:00&quot;</code><br><code>date --set=&quot;2017-06-19 00:00:00&quot;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-s.png" alt=""><br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-cannot-set.png" alt=""></p><h3 id="打包时以时间命名"><a href="#打包时以时间命名" class="headerlink" title="打包时以时间命名"></a><strong>打包时以时间命名</strong></h3><p>描述：压缩目录/etc到当前目录，文件名为etc-2018-06-19.tar.gz。通过在`之间`或$()中内嵌命令。<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># tar czvf etc-$(date +%F).tar.gz /etc</span><br><span class="line">或者</span><br><span class="line"># tar czvf etc-`date +%F`.tar.gz /etc</span><br></pre></td></tr></table></figure></p><h3 id="在脚本中使用date命令"><a href="#在脚本中使用date命令" class="headerlink" title="在脚本中使用date命令"></a><strong>在脚本中使用date命令</strong></h3><p>命令：<br><code>date +&quot;DATE: %A %b-%d-%Y TIME: %T WEEK NUMBER: %W&quot;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/date/date-script.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;date命令用来显示或设置系统时间与日期。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.iweeek.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux cd总结</title>
    <link href="http://www.iweeek.com/2018/06/19/linux/daily-command-cd/"/>
    <id>http://www.iweeek.com/2018/06/19/linux/daily-command-cd/</id>
    <published>2018-06-19T01:36:54.000Z</published>
    <updated>2018-06-19T08:44:11.263Z</updated>
    
    <content type="html"><![CDATA[<p>cd命令用来切换工作目录。</p><a id="more"></a><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>cd [选项] 目录</code></p><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>cd命令（change directory）用来切换工作目录。其中目录可以表示为绝对路径或相对路径，若目录名称省略，则变换至使用者的home directory（登录时所在的目录）。使用者只能访问自己的目录或者其余指定目录。通常与pwd命令一同使用，pwd命令获取当前目录路径并打印出来。</p><p>表: 特殊目录</p><table><thead><tr><th style="text-align:left">特殊目录</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">.</td><td style="text-align:left">代表此层目录</td></tr><tr><td style="text-align:left">..</td><td style="text-align:left">代表上一层目录</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">代表前一个工作目录</td></tr><tr><td style="text-align:left">~</td><td style="text-align:left">代表“目前使用者身份”所在的主文件</td></tr><tr><td style="text-align:left">~account</td><td style="text-align:left">代表account这个使用者的主文件夹（account是个账号名称）</td></tr></tbody></table><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><ul><li>-p 如果要切换到的目标目录是一个符号连接，直接切换到符号连接指向的目标目录。</li><li>-L 如果要切换的目标目录是一个符号的连接，直接切换到字符连接名代表的目录，而非符号连接所指向的目标目录。</li><li>- 只有 - 一个选项时，当前工作目录将被切换到环境变量”OLDPWD”所表示的目录。</li></ul><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="切换到当前目录的上一级目录"><a href="#切换到当前目录的上一级目录" class="headerlink" title="切换到当前目录的上一级目录"></a><strong>切换到当前目录的上一级目录</strong></h3><p>命令：<code>cd ..</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-previous.png" alt=""></p><h3 id="切换到当前目录的上上两层目录"><a href="#切换到当前目录的上上两层目录" class="headerlink" title="切换到当前目录的上上两层目录"></a><strong>切换到当前目录的上上两层目录</strong></h3><p>命令：<code>cd ../..</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-previous-previous.png" alt=""></p><h3 id="切换到当前目录的上一级目录-1"><a href="#切换到当前目录的上一级目录-1" class="headerlink" title="切换到当前目录的上一级目录"></a><strong>切换到当前目录的上一级目录</strong></h3><p>命令：<code>cd ~</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-home.png" alt=""></p><h3 id="切换到根目录"><a href="#切换到根目录" class="headerlink" title="切换到根目录"></a><strong>切换到根目录</strong></h3><p>命令：<code>cd /</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-root.png" alt=""></p><h3 id="切换到某个目录"><a href="#切换到某个目录" class="headerlink" title="切换到某个目录"></a><strong>切换到某个目录</strong></h3><p>命令：<code>cd /etc/security</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-specific.png" alt=""></p><h3 id="返回进入当前目录前所在目录"><a href="#返回进入当前目录前所在目录" class="headerlink" title="返回进入当前目录前所在目录"></a><strong>返回进入当前目录前所在目录</strong></h3><p>命令：<code>cd /etc/security</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-just-now.png" alt=""></p><h3 id="把上个命令的参数用作cd命令的参数"><a href="#把上个命令的参数用作cd命令的参数" class="headerlink" title="把上个命令的参数用作cd命令的参数"></a><strong>把上个命令的参数用作cd命令的参数</strong></h3><p>命令：<code>cd !$</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-last-command.png" alt=""></p><h3 id="切换到名字带有空格的目录"><a href="#切换到名字带有空格的目录" class="headerlink" title="切换到名字带有空格的目录"></a><strong>切换到名字带有空格的目录</strong></h3><p>命令：<code>cd iweeek\ config/</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-space.png" alt=""></p><h3 id="切换到某个目录并且打印列表"><a href="#切换到某个目录并且打印列表" class="headerlink" title="切换到某个目录并且打印列表"></a><strong>切换到某个目录并且打印列表</strong></h3><p>命令：<code>cd /home/nijun/ &amp;&amp; ls;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-pipe.png" alt=""></p><h3 id="保存当前工作目录至内存"><a href="#保存当前工作目录至内存" class="headerlink" title="保存当前工作目录至内存"></a><strong>保存当前工作目录至内存</strong></h3><p>描述：保存当前目录到内存，然后切换到要求的目录。一旦popd被执行，它会从内存取出保存的目录位置，作为当前目录。<br>命令：<br><code>cd /home/nijun/sed</code><br><code>popd</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-pushd-popd.png" alt=""><br>说明：pushd和popd是Linux bash命令，也是其他几个能够保存当前工作目录位置至内存，并且从内存读取目录作为当前目录的脚本，这些脚本也可以切换目录。</p><h3 id="切换到某个字符串开头的目录"><a href="#切换到某个字符串开头的目录" class="headerlink" title="切换到某个字符串开头的目录"></a><strong>切换到某个字符串开头的目录</strong></h3><p>描述：如果目录中只有一个以s开头的目录，就会直接移动security目录中。如果有很多目录以s开头，而且命令行没有提供更多的标准，这将会移动到第一个以s开头的命令（以标准字典的顺序）。<br>命令：<br><code>cd /etc/s*</code><br><code>cd /etc/securi*</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-asterisk.png" alt=""></p><p>命令：<code>cd /etc/p?</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cd/cd-question.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;cd命令用来切换工作目录。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.iweeek.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux ls总结</title>
    <link href="http://www.iweeek.com/2018/06/15/linux/daily-command-ls/"/>
    <id>http://www.iweeek.com/2018/06/15/linux/daily-command-ls/</id>
    <published>2018-06-15T08:37:59.000Z</published>
    <updated>2018-06-22T01:17:53.910Z</updated>
    
    <content type="html"><![CDATA[<p>ls命令用来列出目标目录中所有子目录和文件。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>ls（list）命令用来列出目标目录（缺省为当前目录）中所有子目录和文件。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>ls [选项] [参数]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">-a：列出任何以.开头的文件（常用）。</span><br><span class="line">-A：列出除.与..之外的任何文件。</span><br><span class="line">-c：显示的最后更改时间（ctime）。默认以创建时间（最后更改时间）排序，最新的排在前面；如果与-l搭配使用，那么会以文件名排序；如果与-lt搭配，会显示创建时间（最后更改时间），根据时间排序。</span><br><span class="line">-B：忽略备份文件，Linux中的备份文件以波浪号（~）结尾。</span><br><span class="line">-d：仅列出目录本身，而不是列出目录内的文件数据（常用）</span><br><span class="line">-f：不排序，与启用-aU，不启用-ls --color效果一样。</span><br><span class="line">-F：根据文件、目录等信息，给与附加数据结构，例如：</span><br><span class="line">- @：代表一个符号链接。</span><br><span class="line">- *：代表可执行文件。</span><br><span class="line">- /：代表目录。</span><br><span class="line">- =：代表socket文件。</span><br><span class="line">- |：代表FIFO文件。</span><br><span class="line">-g：像-l，但不列出拥有者。</span><br><span class="line">-G：在-l下，不列出组名字。</span><br><span class="line">-h：以人类可读的形式，打印文件大小，例如1K、234M、2G等等。</span><br><span class="line">-i：打印inode信息。</span><br><span class="line">-l：使用长数据串格式。</span><br><span class="line">-r：排序时反转列表。</span><br><span class="line">-R：递归列出子目录。</span><br><span class="line">-s：列出每个文件分配的blocks大小。</span><br><span class="line">-S：根据文件大小排序，最大的列在前面。</span><br><span class="line">-t：根据最近修改时间排序，最新的列在前面。</span><br><span class="line">-u：与-l搭配显示访问时间（atime）。</span><br><span class="line">-U：不排序，按照目录顺序列出所有文件。</span><br><span class="line">--author：在-l下，打印出作者的信息。</span><br><span class="line">--color=never：不根据文件特性显示颜色。</span><br><span class="line">--color=always：显示颜色。</span><br><span class="line">--color=auto：系统自动判断是否显示颜色。</span><br><span class="line">--format：以各种格式输出目录的内容。下文将介绍。</span><br><span class="line">--full-time：以完整时间模式（包括年、月、日、时、分）输出。</span><br><span class="line">--sort：根据不同规则排序。下文将介绍。</span><br><span class="line">--time-style=[STYLE]：设置日期格式输出格式。</span><br><span class="line">--time=&#123;atime,ctime&#125;：将时间显示为atime、ctime和mtime其中一个，默认显示的是内容修改时间。</span><br><span class="line">- atime：访问时间。</span><br><span class="line">- ctime：权限改变属性时间。</span><br><span class="line">- mtime：内容修改时间。</span><br></pre></td></tr></table></figure><h3 id="示例：1-查看文件和目录"><a href="#示例：1-查看文件和目录" class="headerlink" title="示例：1. 查看文件和目录"></a>示例：1. 查看文件和目录</h3><p>描述：ls命令最基本的形式会显示当前目录下的文件和目录。<br>命令：<code>ls</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls.png" alt=""></p><h3 id="示例：2-区分文件和目录"><a href="#示例：2-区分文件和目录" class="headerlink" title="示例：2. 区分文件和目录"></a>示例：2. 区分文件和目录</h3><p>描述：如果用户用的不是支持彩色的终端仿真器，可以用-F选项的ls命令轻松区分文件和目录。-F参数在目录名后加了正斜线（/），在可执行文件的后面加了星号。有关的指示符如下：</p><ul><li>@：代表一个符号链接。</li><li>*：代表可执行文件。</li><li>/：代表目录。</li><li>=：代表socket文件。</li><li>|：代表FIFO文件。<br>命令：<code>ls -F</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-F.png" alt=""></li></ul><h3 id="示例：3-显示隐藏文件和普通文件"><a href="#示例：3-显示隐藏文件和普通文件" class="headerlink" title="示例：3. 显示隐藏文件和普通文件"></a>示例：3. 显示隐藏文件和普通文件</h3><p>描述：显示当前目录下的所有以点号开头的隐藏文件和普通文件及目录。-a选项可以显示将隐藏文件显示出来。如果要跳过输出中的（.）和（..），使用-A选项。<br>命令：<br><code>ls -a</code><br><code>ls -A</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-a.png" alt=""></p><h3 id="示例：4-递归显示文件"><a href="#示例：4-递归显示文件" class="headerlink" title="示例：4. 递归显示文件"></a>示例：4. 递归显示文件</h3><p>描述：列出当前目录下包含的子目录中的文件。-R选项，它叫做递归选项，它先显示了当前目录下的内容，然后还显示了所有子目录及其内容，如果子目录有跟多的子目录，-R选项会继续进行遍历。-F -R可以合并起来，如-FR。<br>命令：<br><code>ls -F -R</code><br><code>ls -FR</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-R.png" alt=""></p><h3 id="示例：5-查看长（详细）列表"><a href="#示例：5-查看长（详细）列表" class="headerlink" title="示例：5. 查看长（详细）列表"></a>示例：5. 查看长（详细）列表</h3><p>描述：显示文件或目录的附加信息。-l显示文件或者目录的大小，修改日期和时间，文件或者文件夹的名字和拥有者，以及它的权限信息。<br>命令：<code>ls -l</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-l.png" alt=""></p><p>以.开头的文件是隐藏文件，（.）（..）分别代表当前目录和上一级目录，目录的颜色是以蓝色显示的。<br>每一行都包含了关于文件（或目录）的下述信息：</p><ul><li><p>第1字段：文件属性字段<br>文件属性字段总共有10个字母组成，第一个字符表示文件类型：<br>字符（-）：普通文件。<br>字母（d）：目录。<br>字母（l）：链接文件。<br>字母（c）：字符设备文件（character）。<br>字母（b）：块设备文件（block），一般置于/dev目录下，设备文件是普通文件和程序访问硬件设备的入口，一类特殊文件。<br>字母（p）：命令管道文件。与shell编程有关的文件。<br>字母（s）：sock文件。与shell编程有关的文件。<br>第1个字符后面的9个字母表示该文件或目录的权限位。三个为一组，均为rwx三个参数的组合。[r]代表可读、[w]代表可写、[x]代表可执行。如果没有权限，则会出现减号[-]。第一组为文件拥有者可具备的权限，第二个为加入此群组之账号的权限，第三组为非本人且没有加入本群组之其他账号的权限。</p></li><li><p>第2字段：如果一个文件不是目录，此时这一字段表示文件所具有的硬链接数。</p></li><li>第3字段：文件属主的用户名</li><li>第4字段：文件属组的组名。</li><li>第5字段：文件的大小（以字节为单位）。</li><li>第6字段：文件的上次修改时间。</li><li>第7字段：文件名或目录名。</li></ul><h3 id="示例：6-列出每个文件分配的blocks大小"><a href="#示例：6-列出每个文件分配的blocks大小" class="headerlink" title="示例：6. 列出每个文件分配的blocks大小"></a>示例：6. 列出每个文件分配的blocks大小</h3><p>描述：-s列出每个文件分配的blocks大小。-s与-l搭配使用，第一列的数字就是该文件的blocks大小。<br>命令：<code>ls -ls</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-show-blocks.png" alt=""></p><p>注意到第一行的total后跟的数字，它是指当前目录下所有文件所占用的空间总和。文件系统在格式化时就规范好了块（block）的大小，每个block仅能容纳一个文件，如果块大小为4K，而文件只有1K，则会有3K的空间被浪费。第一列数字的总和就是total的值。</p><h3 id="示例：7-查看文件的author"><a href="#示例：7-查看文件的author" class="headerlink" title="示例：7. 查看文件的author"></a>示例：7. 查看文件的author</h3><p>描述：–author选项与-l相结合可以在第五列显示每个文件的作者。<br>命令：<code>ls -l --author</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-author.png" alt=""></p><p>注意到第一行的total后跟的数字，它是指当前目录下所有文件所占用的空间总和。文件系统在格式化时就规范好了块（block）的大小，每个block仅能容纳一个文件，如果块大小为4K，而文件只有1K，则会有3K的空间被浪费。第一列数字的总和就是total的值。</p><h3 id="示例：8-以字节为单位打印文件大小"><a href="#示例：8-以字节为单位打印文件大小" class="headerlink" title="示例：8. 以字节为单位打印文件大小"></a>示例：8. 以字节为单位打印文件大小</h3><p>描述：使用–block-size选项，以千字节或兆字节等为单词显示文件的大小。<br>命令：<code>ls -l --block-size=k [file-name]</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-block-size.png" alt=""></p><h3 id="示例：9-使ls在输出中仅显示文件名和文件大小"><a href="#示例：9-使ls在输出中仅显示文件名和文件大小" class="headerlink" title="示例：9. 使ls在输出中仅显示文件名和文件大小"></a>示例：9. 使ls在输出中仅显示文件名和文件大小</h3><p>描述：使-h选项和-s选项配合使用，让ls输出仅包含文件/目录名称及其各自的大小。<br>命令：<code>ls -s -h</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-s-h.png" alt=""></p><h3 id="示例：10-过滤输出列表"><a href="#示例：10-过滤输出列表" class="headerlink" title="示例：10. 过滤输出列表"></a>示例：10. 过滤输出列表</h3><p>描述：过滤器l?tter与目录中的两个文件匹配。问号可用于过滤器字符串中替代任意位置的单个字符。<br>命令：<code>ls -l l?tter</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-one-letter.png" alt=""></p><p>描述：使用星号找到了四个名字以l开头的文件。和问号一样，可以把星号放在过滤器中的任意位置。<br>命令：<code>ls -l l*</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-asterisk.png" alt=""></p><p>描述：中括号表示一个字符位置并给出多个可能的选择。例如列出文件名为latter或letter的文件。<br>命令：<code>ls -l l[ae]tter</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-metacharacter-wildcards.png" alt=""></p><p>描述：中括号[a-i]还可以表示从一个字母范围里匹配。<br>命令：<code>ls -l f[a-i]ll</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-range.png" alt=""></p><p>描述：感叹号（!）将不需要的内容排除在外。<br>命令：<code>ls -l f[!a]ll</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-exclamation.png" alt=""></p><h3 id="示例：11-以人类可阅读的格式列出文件信息"><a href="#示例：11-以人类可阅读的格式列出文件信息" class="headerlink" title="示例：11. 以人类可阅读的格式列出文件信息"></a>示例：11. 以人类可阅读的格式列出文件信息</h3><p>描述：-h选项会将文件大小变为K，M，G等人类可阅读的格式。<br>命令：<code>ls -lh</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-h.png" alt=""></p><h3 id="示例：12-反转显示结果"><a href="#示例：12-反转显示结果" class="headerlink" title="示例：12. 反转显示结果"></a>示例：12. 反转显示结果</h3><p>描述：-r参数将默认的显示结构进行倒序显示。<br>命令：<code>ls -r</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-reverse.png" alt=""></p><h3 id="示例：13-按照修改时间的从远到近顺序排列"><a href="#示例：13-按照修改时间的从远到近顺序排列" class="headerlink" title="示例：13. 按照修改时间的从远到近顺序排列"></a>示例：13. 按照修改时间的从远到近顺序排列</h3><p>描述：-t参数将按照时间从近到远进行排序。<br>命令：<code>ls -lt</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-t.png" alt=""></p><h3 id="示例：14-按照文件的大小排列"><a href="#示例：14-按照文件的大小排列" class="headerlink" title="示例：14. 按照文件的大小排列"></a>示例：14. 按照文件的大小排列</h3><p>描述：-S参数按照文件的大小进行排序。<br>命令：<code>ls -lS</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-S.png" alt=""></p><h3 id="示例：15-自定义显示日期格式"><a href="#示例：15-自定义显示日期格式" class="headerlink" title="示例：15. 自定义显示日期格式"></a>示例：15. 自定义显示日期格式</h3><p>描述：–time-style=[STYLE]可以自定义的文件修改日期格式进行显示。也可以直接使用–full-time显示最全的时间信息。[STYLE]的选项如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- full-iso</span><br><span class="line">- long-iso</span><br><span class="line">- iso</span><br><span class="line">- locale</span><br><span class="line">- +%H:%M:%S:%D</span><br></pre></td></tr></table></figure><p>命令：<br><code>ls -l --time-style=iso</code><br><code>ls --full-time ~</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-time-style.png" alt=""></p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-full-time.png" alt=""></p><h3 id="示例：16-根据不同的规则进行排序"><a href="#示例：16-根据不同的规则进行排序" class="headerlink" title="示例：16. 根据不同的规则进行排序"></a>示例：16. 根据不同的规则进行排序</h3><p>描述：根据–sort不同的规则进行排序。可选值如下（括号里表示等效的命令行参数）：</p><ul><li>extension(-X)：根据文件扩展名排序。</li><li>size(-S)：根据文件大小排序。</li><li>time(-t)：根据时间先后排序。</li><li>version(-v)</li><li>none(-U)</li></ul><p>命令：<code>ls -l --sort=extension</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-sort-extension.png" alt=""></p><h3 id="示例：17-更改ls命令输出格式"><a href="#示例：17-更改ls命令输出格式" class="headerlink" title="示例：17.更改ls命令输出格式"></a>示例：17.更改ls命令输出格式</h3><p>描述：–-format可以以各种格式输出目录的内容，例如逗号，水平、垂直分隔等等。可选值如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- comma：逗号。</span><br><span class="line">- horizontal或across：水平。</span><br><span class="line">- long或verbose：长列表，如-l选项。</span><br><span class="line">- single-column：单列。</span><br><span class="line">- vertical：垂直排列，根据屏幕宽度决定显示几列。</span><br></pre></td></tr></table></figure><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-commas.png" alt=""></p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-single-column.png" alt=""></p><h3 id="示例：18-使ls隐藏特定类型的文件"><a href="#示例：18-使ls隐藏特定类型的文件" class="headerlink" title="示例：18.使ls隐藏特定类型的文件"></a>示例：18.使ls隐藏特定类型的文件</h3><p>描述：使用–hide可以强制ls命令在输出中隐藏特定类型的文件。例如，在输出中隐藏以.txt结尾的文件。<br>命令：<code>ls --hide=*.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ls/ls-hide.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ls命令用来列出目标目录中所有子目录和文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux touch总结</title>
    <link href="http://www.iweeek.com/2018/06/14/linux/daily-command-touch/"/>
    <id>http://www.iweeek.com/2018/06/14/linux/daily-command-touch/</id>
    <published>2018-06-14T05:12:08.000Z</published>
    <updated>2018-06-22T01:56:05.845Z</updated>
    
    <content type="html"><![CDATA[<p>touch命令用来创建文件，也可以更改和修改一个文件的时间戳。<br><a id="more"></a></p><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>touch命令用来创建文件，也可以更改和修改一个文件的时间戳。Linux中的每个文件都与时间戳相关联，而且每个文件都存储上次访问时间，上次修改时间，上次更改时间的信息。因为，无论何时创建一个新文件，访问或者修改现有文件，时间戳都会被自动更新。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/touch/touch-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>touch [选项] [参数]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><p>Linux中的文件有三个时间：</p><ul><li>access time（atime）：访问时间，对一次文件的内容就会更新。例如cat，vi/vim，cp，touch命令。</li><li>modification time（mtime）：修改时间，对文件内容修改一次就会更新。例如touch，vi/vim命令。</li><li>status time（ctime）：状态改动时间。通过chmod/chown/chgrp等命令更改一次文件属性，通过touch准确地修改时间等，这个时间就会更新。例如mv，touch，chmod/chown/chgrp，vi/vim等命令。</li></ul><p>touch命令选项：</p><ul><li>-a，只改变访问时间。</li><li>-c，如果文件不存在，那就不创建。</li><li>-d，更新访问时间和修改时间。</li><li>-m，只改变修改时间。</li><li>-r，将参照文件ref_file相应的时间戳作为指定文件file时间戳的新值。</li><li>-t，用指定的时间创建文件，格式是[[CC]YY]MMDDhhmm[.SS]。CCYY的范围在1969~2068之内。SS为秒数，范围在0~61之间，这样可以处理闰秒。由于系统的限制，早于1970年1月1日的时间是错误的。</li></ul><h3 id="示例：1-创建空文件"><a href="#示例：1-创建空文件" class="headerlink" title="示例：1. 创建空文件"></a>示例：1. 创建空文件</h3><p>描述：若文件不存在，使用touch命令可以轻松地创建一个空文件，或是创建多个。如果文件已存在，那么文件的3个时间：修改时间（mtime）、状态改动时间（ctime）和访问时间（atime）都会被更新为当前时间。stat命令可以查看文件时间。<br>命令：<br><code>touch my_one</code><br><code>stat my_one</code><br><code>touch my_one my_two my_three</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/touch/touch.png" alt=""></p><h3 id="示例：2-只改变文件的修改时间（mtime）和状态改动时间（ctime）"><a href="#示例：2-只改变文件的修改时间（mtime）和状态改动时间（ctime）" class="headerlink" title="示例：2. 只改变文件的修改时间（mtime）和状态改动时间（ctime）"></a>示例：2. 只改变文件的修改时间（mtime）和状态改动时间（ctime）</h3><p>描述：只改变my_three文件的修改时间为当前时间，同时状态改动时间会在命令执行后更新为当前时间。这个操作并不需要修改文件内容。-m选项只更改文件的修改时间。<br>命令：<code>touch -m my_three</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/touch/touch-m.png" alt=""></p><h3 id="示例：3-只改变文件访问时间（atime）和状态改动时间（ctime）"><a href="#示例：3-只改变文件访问时间（atime）和状态改动时间（ctime）" class="headerlink" title="示例：3. 只改变文件访问时间（atime）和状态改动时间（ctime）"></a>示例：3. 只改变文件访问时间（atime）和状态改动时间（ctime）</h3><p>描述：只改变my_three文件的访问时间为当前时间，同时状态改动时间会在命令执行后更新为当前时间。如果文件不存在，会创建新的空文件。-a选项只更改文件的访问时间。<br>命令：<code>touch -a my_three</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/touch/touch-a.png" alt=""></p><h3 id="示例：4-指定文件的访问时间和修改时间"><a href="#示例：4-指定文件的访问时间和修改时间" class="headerlink" title="示例：4. 指定文件的访问时间和修改时间"></a>示例：4. 指定文件的访问时间和修改时间</h3><p>描述：同时设置文件的访问时间和修改时间为指定时间，同时会更新状态改变时间为当前命令执行后的时间。如果文件不存在，会创建新的空文件。-d选项同时改变文件的访问时间和修改时间。<br>命令：<code>touch -d &quot;2018-06-14 14:00:00&quot; my_three</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/touch/touch-d.png" alt=""></p><p>描述：将my_three文件的访问时间和修改时间修改成两天前。touch还支持像date命令那样修改文件的时间。<br>命令：<code>touch -d &quot;2 days ago&quot; my_three</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/touch/touch-d-date.png" alt=""></p><h3 id="示例：5-避免创建新文件"><a href="#示例：5-避免创建新文件" class="headerlink" title="示例：5. 避免创建新文件"></a>示例：5. 避免创建新文件</h3><p>描述：更新atime、ctime、mtime，如果文件不存在，-c选项不会创建新的文件。<br>命令：<code>touch -c leena</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/touch/touch-a.png" alt=""></p><h3 id="示例：6-使用另一个文件的时间戳"><a href="#示例：6-使用另一个文件的时间戳" class="headerlink" title="示例：6. 使用另一个文件的时间戳"></a>示例：6. 使用另一个文件的时间戳</h3><p>描述：-r选项将my_three的时间戳作为my_two文件的时间戳的新值，这两个文件有相同的时间戳。<br>命令：<code>touch -r my_three my_two</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/touch/touch-r.png" alt=""></p><h3 id="示例：7-使用指定的时间戳创建一个文件"><a href="#示例：7-使用指定的时间戳创建一个文件" class="headerlink" title="示例：7. 使用指定的时间戳创建一个文件"></a>示例：7. 使用指定的时间戳创建一个文件</h3><p>描述：将my_four文件的时间戳指定为1997年6月14日17点00分55秒。时间格式是[[CC]YY]MMDDhhmm[.SS]。<br>命令：<code>touch -t 199706141700.55 my_four</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/touch/touch-t.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;touch命令用来创建文件，也可以更改和修改一个文件的时间戳。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux more总结</title>
    <link href="http://www.iweeek.com/2018/06/13/linux/daily-command-more/"/>
    <id>http://www.iweeek.com/2018/06/13/linux/daily-command-more/</id>
    <published>2018-06-13T06:23:45.000Z</published>
    <updated>2018-06-22T01:19:00.688Z</updated>
    
    <content type="html"><![CDATA[<p>more命令是一个基于vi编辑器文本过滤器，用于一次查看一个或多个文件的内容，它以全屏幕的方式按页显示文本文件的内容，支持vi中的关键字定位操作。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>more命令用于一次查看一个或多个文件的内容。它支持通过文件向前和向后导航，主要用于查看文件的内容。它还支持搜索字符串或正则表达式，并在文本编辑器中的当前位置打开文件。<br>more内置若干快捷键，常用的有H（获得帮助信息），Enter（向下翻滚一行），空格（向下滚动一屏），Q（退出命令）。<br><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>more [-dlfpcsu] [-num lines] [+/pattern] [+linenum] [file ...]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-num <em>lines</em>：指定每屏显示的行数。</li><li>-d：显示“[press space to continue,’q’ to quit.]”和“[Press ‘h’ for instructions]”。当一个非法的按键按下时，会响铃。</li><li>-c：不进行滚屏操作。每次刷新这个屏幕。</li><li>-s：将多个空行压缩成一行显示。</li><li>-u：禁止下划线。</li><li>+<em>num</em>：从指定数字的行开始显示。</li><li><strong>+/</strong> <em>正则表达式</em>：指定搜索的正则表达式。</li></ul><p>该命令一次显示一屏文本，满屏后停下来，并且在屏幕的底部出现一个提示信息，给出至今己显示的该文件的百分比：–More–（XX%）可以用下列不同的方法对提示做出回答：</p><ul><li><strong>h</strong>, <strong>?</strong>：显示简短的命令汇总帮助信息。</li><li>[<em>k</em>]<strong>SPACE</strong>, [<em>k</em>]<strong>z</strong>：显示文本的下一屏内容。</li><li>[<em>k</em>]<strong>RETURN</strong>：只显示文本的下一行内容。</li><li>[<em>k</em>]<strong>d</strong>,[<em>k</em>]<strong>^D</strong>：滚动k行，初始滚动11行。</li><li><strong>q</strong>, <strong>Q</strong>, <strong>^C</strong>：退出more命令。</li><li>[<em>k</em>]<strong>s</strong>：跳过k行，默认是1行。</li><li>[<em>k</em>]<strong>f</strong>：跳出k个屏幕大小的行，默认是1行。</li><li><strong>b</strong>, <strong>^B</strong>：显示上一屏的内容，默认是1行，仅在浏览文件时起作用，通过管道传送过来的是无效的。</li><li><strong>‘</strong>：返回到上一次搜索开始的位置。</li><li><strong>=</strong>：显示当前行号。</li><li>[<em>k</em>]<strong>/</strong> <em>pattern</em>：进入搜索模式，搜索第k次出现匹配正则表达式的地方，默认是第一次出现的地方。按n键继续搜索下一个匹配项。</li><li>[<em>k</em>]<strong>n</strong>：搜索第k次出现上次匹配上一次正则表达式的地方，默认是1。</li><li><strong>!</strong> <em>command</em>, <strong>:!</strong> <em>command</em>：在子shell中执行命令。</li><li><strong>v</strong>：用$EDITOR指定的编辑器打开当前行。如果未指定，则默认用/usr/bin/vi打开。</li><li><strong>^L</strong>：与-c选项相同，重绘屏幕，不进行滚屏。</li><li>[<em>k</em>]<strong>:n</strong>：如果有多个文件，跳到下一个文件。</li><li>[<em>k</em>]<strong>:p</strong>：如果有多个文件，跳到上一个文件。</li><li><strong>:f</strong>：显示当前文件的名字和行号。</li><li><strong>.</strong>：重复上一次的命令。</li></ul><h2 id="实用示例"><a href="#实用示例" class="headerlink" title="实用示例"></a>实用示例</h2><p><strong>实例：1. 查看文件的内容</strong><br>描述：打开文件第一页放入可用的屏幕大小内。more移动文件的百分比值将在底部的实时显示。<br>命令：<code>more /usr/share/dict/words</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/more/more.png" alt=""></p><p>描述：-3表示每次仅显示3行。-c选项将不进行滚屏操作，而是每次刷新这个屏幕。<br>命令：<code>more -3 -c /usr/share/dict/words</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-editor.png" alt=""></p><p><strong>实例：2. 显示帮助</strong><br>描述：-d显示[press space to continue,’q’ to quit.]提示。按h键或?键可以显示帮助信息。<br>输出:<br><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-h.png" alt=""></p><p><strong>实例：3. 显示行号</strong><br>描述：按=键，可以显示当前的行号。<br>命令：<code>按=键显示行号</code><br>输出:<br><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-=.png" alt=""></p><p><strong>实例：4. 查看多个文件的内容</strong><br>描述：如果通过通配符传递给more多个文件的的内容，这将为每个文件打开一个缓冲区并显示第一个文件，并显示一个标题以指示正在显示的文件。<br>命令：<code>more /usr/share/dict/*</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-n-p.png" alt=""><br>按:n跳到下一个文件的开头。<br><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-next-file.png" alt=""><br>按:p要跳回上一个文件的开头。<br><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-previous-file.png" alt=""></p><p><strong>实例：5. 查看更多</strong><br>描述：<br>按Space键或者z键可以基于当前屏幕的大小向前移动一页。按回车键向前移动一行，或者在按回车键之前按一个数字n，再按回车键，可以直接向前移动n行。按b或者CTRL-B向后移动一页。</p><p><strong>实例：6. 打开文件并定位到指定的行</strong><br>描述：打开letter文件，并直接定位到第10行J字母位置。<br>命令：<code>more +10 letter</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-to-line-number.png" alt=""></p><p><strong>实例：7. 打开文件并定位到第一次匹配的位置</strong><br>描述：打开words文件，查找第一次出现以eat开头的单词，并定位到该位置。选项+后跟搜索模式，表示搜索字符串第一次出现的位置，搜索模式应该以/开头，可以是正则表达式。<br>命令：<code>more +/^eat /usr/share/dict/words</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-wildcard.png" alt=""></p><p><strong>实例：8. 如何在more界面下搜索内容</strong><br>描述：在more界面中，按/键后进入搜索模式，输入要搜索的短语，搜索模式接受正则表达式。例如，在words文件中搜索eat，将搜索短语的实例并滚动到页面第一次出现它的位置。<br>如果要继续查找下一个出现该模式的地方，按n键即可。<br>命令：<code>按/键进入搜索模式</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-search.png" alt=""></p><p><strong>实例：9. 编辑正在查看的文件</strong><br>在more界面中，按v键后将会打开文本编辑器，默认的文本编辑器是$EDITOR变量指定的。当修改完成保存后退出，将会回到more界面。如果$EDITOR没有指定编辑器，那么默认的vi将会被使用。</p><p>描述：先查看$EDITOR是否已设置，如果没有，在命令行输入export EDITOR=vim可以临时设置。如果要永久设置该变量，请将其添加到.bashrc文件或.zshrc文件中。<br>命令：<br><code>export EDITOR=vim</code><br><code>按v键进入编辑模式</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-editor.png" alt=""></p><p><strong>实例：9. 命令行搜索正则表达式</strong><br>模式：从words文件中搜索单词中含有eat的位置，每次显示3行，从第10行开始搜索，并加以提示。<br>命令：<code>more -d -3 +/eat +10 /usr/share/dict/words</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/more/more-editor.png" alt=""></p><p><strong>实例：10. 如何退出more</strong><br>描述：按q、Q键或CTRL-C（中断键）退出more界面，并返回到终端提示符。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;more命令是一个基于vi编辑器文本过滤器，用于一次查看一个或多个文件的内容，它以全屏幕的方式按页显示文本文件的内容，支持vi中的关键字定位操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux tail总结</title>
    <link href="http://www.iweeek.com/2018/06/13/linux/daily-command-tail/"/>
    <id>http://www.iweeek.com/2018/06/13/linux/daily-command-tail/</id>
    <published>2018-06-13T03:31:58.000Z</published>
    <updated>2018-06-22T01:54:41.175Z</updated>
    
    <content type="html"><![CDATA[<p>tail命令用于显示来自文件或者管道结尾（最新实时）的内容。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>tail命令用于显示来自文件或者管道结尾（最新实时）的内容。默认情况下，tail命令显示文件的最后10行内容。支持多文件处理，在输出每个文件之前都有一个标识文件名的标题。如果未指定文件，或者文件被指定为破折号「-」，则tail命令从标准输入中读取。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>tail [选项] [文件(s)]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>–retry：即是在tail命令启动时，文件不可访问或者文件稍后变得不可访问，都始终尝试打开文件。使用此选项时需要与选项“——follow=name”连用；</li><li>-c<n>或——bytes=<n>：输出文件尾部的N（N为整数）个字节内容；</n></n></li><li>-f&lt;name/descriptor&gt;或；–follow<nameldescript>：显示文件最新追加的内容。“name”表示以文件名的方式监视文件的变化。“-f”与“-fdescriptor”等效；</nameldescript></li><li>-F：与选项“-follow=name”和“–retry”连用时功能相同；</li><li>-n<n>或——line=<n>：输出文件的尾部N（N位数字）行内容。</n></n></li><li>–pid=&lt;进程号&gt;：与“-f”选项连用，当指定的进程号的进程终止后，自动退出tail命令；</li><li>-q或——quiet或——silent：当有多个文件参数时，不输出各个文件名；</li><li>-s&lt;秒数&gt;或——sleep-interal=&lt;秒数&gt;：与“-f”选项连用，指定监视文件变化时间隔的秒数；</li><li>-v或——verbose：当有多个文件参数时，总是输出各个文件名；</li><li>–help：显示指令的帮助信息；</li><li>–version：显示指令的版本信息。tail -f  /usr/local/webserver/tomcat/logs/catalina.out</li></ul><h2 id="实用示例"><a href="#实用示例" class="headerlink" title="实用示例"></a>实用示例</h2><p><strong>实例：1. 查看文件的后十行</strong><br>描述：查看words文件的后10行。默认情况下，tail命令显示文件的最后10行内容。<br>命令：<code>tail letter</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail.png" alt=""></p><p><strong>实例：2. 限制要显示的行数</strong><br>描述：显示words文件的最后3行。-n选项限制要显示的行数。<br>命令：<br><code>tail -n 3 letter</code><br><code>tail -3 letter</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail-n.png" alt=""></p><p>描述：显示words文件的最后1000行。可以在num后加上后缀，例如：b，KB，K等等。<br>命令：<code>tail -n 1K /usr/share/dict/words</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail-n-1K.png" alt=""></p><p><strong>实例：3. 监视日志文件</strong><br>描述：显示words文件（日志文件）的最后10行，并且一直监视它，一旦有新的内容加入，就立即打印出来。-f选项将监视文件的更新。<br>命令：<code>tail -f /usr/share/dict/words</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail-f-CTRL-C.png" alt=""><br>注意：tail -f将一直监视着文件，要停止它，按CTRL+C。</p><p><strong>实例：4. 监视日志文件并只输出指定内容</strong><br>描述：tail将监视access.log文件，它将通过管道传送access.log的最后十行和任何新加入到文件中的行给grep。grep读取从tail传送过来的输出，只打印出包含IP地址10.10.10.10的那些行。<br>命令：<code>tail -f access.log | grep 10.10.10.10</code></p><p><strong>实例：5. 监视日志文件并指定刷新间隔</strong><br>描述：tail将监视access.log文件，其监视的时间间隔为5秒。<br>命令：<code>tail -f -s 5 access.log</code></p><p><strong>实例：6. tail -f的代替命令</strong><br>描述：与tail -f效果相同的命令是less。使用下面命令打开文件后，按下shift+f，就与tail -f的效果相同了。<br>命令：<br><code>less /usr/share/dict/words</code><br>press<code>SHIFT+F</code><br>输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail-less.png" alt=""></p><p><strong>实例：7. 限制要显示的字节数</strong><br>描述：显示words文件的最后32个字节。-c选项限制显示的字节数。<br>命令：<code>tail -c 32 /usr/share/dict/words</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail-c.png" alt=""></p><p><strong>实例：8. 显示多个文件</strong><br>描述：显示多个文件的前十行，同时标题会显示哪个文件正在显示。<br>命令：<code>tail /usr/share/dict/words /usr/share/dict/propernames</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail-multi-file.png" alt=""></p><p><strong>实例：9. 多个文件不显示标题</strong><br>描述：显示多个文件的前3行，不显示正在显示文件的标题。<br>命令：<code>tail -n 3 -q /usr/share/dict/words /usr/share/dict/propernames</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail-q.png" alt=""></p><p><strong>实例：10. 与管道配合使用</strong><br>描述：显示/etc/目录下的最近修改的前5个文件或文件夹。tail命令可以接受其他命令通过管道传送过来的信息。<br>命令：<code>cat letter | tail -n 5</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/tail/tail-pipe.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tail命令用于显示来自文件或者管道结尾（最新实时）的内容。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux head总结</title>
    <link href="http://www.iweeek.com/2018/06/13/linux/daily-command-head/"/>
    <id>http://www.iweeek.com/2018/06/13/linux/daily-command-head/</id>
    <published>2018-06-13T02:16:29.000Z</published>
    <updated>2018-06-18T12:41:56.291Z</updated>
    
    <content type="html"><![CDATA[<p>head命令用于显示来自文件或者管道开头的内容。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>head命令用于显示来自文件或者管道开头的内容。默认情况下，head命令显示文件的头10行内容。支持多文件处理，在输出每个文件之前都有一个标识文件名的标题。如果未指定文件，或者文件被指定为破折号「-」，则head命令从标准输入中读取。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/head/head-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>head [选项] [文件]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-n, –bytes=[-]<em>num</em>：指定显示头部内容的行数；</li><li>-c, –lines=[-]<em>num</em>：指定显示头部内容的字节数；</li><li>-v, –vervose：总是显示文件名的头信息；</li><li>-q, –quirt, –silent：不显示文件名的头信息。</li><li>–help：显示一段帮助信息后退出。</li><li>–version：打印版本后退出。</li></ul><p>上面选项中的<em>num</em>可能有一个乘数后缀：</p><ul><li>b：512</li><li>kB：1000</li><li>K：1024</li><li>MB：1000*1000</li><li>M：1024*1024</li><li>GB：1000*1000*1000</li><li>G：1024*1024*1024</li></ul><p>还有T，P，E，Z，Y等等。</p><h2 id="实用示例"><a href="#实用示例" class="headerlink" title="实用示例"></a>实用示例</h2><p><strong>实例：1. 查看文件的前十行</strong><br>描述：查看words文件的前10行。默认情况下，head命令显示文件的头10行内容。<br>命令：<code>head /usr/share/dict/words</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/head/head.png" alt=""></p><p><strong>实例：2. 限制要显示的行数</strong><br>描述：显示words文件的前3行。-n选项限制要显示的行数。<br>命令：<br><code>head -n 3 /usr/share/dict/words</code><br><code>head -3 /usr/share/dict/words</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/head/head-n.png" alt=""></p><p>描述：显示words文件的前1000行。可以在num后加上后缀，例如：b，KB，K等等。<br>命令：<code>head -n 1K /usr/share/dict/words</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/head/head-n-1K.png" alt=""></p><p><strong>实例：3. 限制要显示的字节数</strong><br>描述：显示words文件的前16个字节。-c选项限制显示的字节数。<br>命令：<code>head -c 16 /usr/share/dict/words</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/head/head-c.png" alt=""></p><p><strong>实例：4. 显示多个文件</strong><br>描述：显示多个文件的前十行，同时标题会显示哪个文件正在显示。<br>命令：<code>head /usr/share/dict/words /usr/share/dict/propernames</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/head/head-multi-file.png" alt=""></p><p>描述：显示多个文件和标准输入的前三行，同时标题会显示哪个文件正在显示。<br>命令：<code>head -n 3 /usr/share/dict/words /usr/share/dict/propernames -</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/head/head-standard-input.png.png" alt=""></p><p><strong>实例：5. 多个文件不显示标题</strong><br>描述：显示多个文件的前十行，不显示正在显示文件的标题。<br>命令：<code>head -q /usr/share/dict/words /usr/share/dict/propernames</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/head/head-q.png" alt=""></p><p><strong>实例：6. 与管道配合使用</strong><br>描述：显示/etc/目录下的最近修改的前5个文件或文件夹。head命令可以接受其他命令通过管道传送过来的信息。<br>命令：<code>ls -t /etc/ | head -n 5</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/head/head-pipe.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;head命令用于显示来自文件或者管道开头的内容。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux type总结</title>
    <link href="http://www.iweeek.com/2018/06/13/linux/daily-command-type/"/>
    <id>http://www.iweeek.com/2018/06/13/linux/daily-command-type/</id>
    <published>2018-06-13T00:56:25.000Z</published>
    <updated>2018-06-22T01:56:40.559Z</updated>
    
    <content type="html"><![CDATA[<p>type命令用于查找Linux命令的信息。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>type命令用来显示指定命令的类型，可以轻松找出给定的命令是否是别名、shell内置命令、文件、函数或关键字。另外，也可以找到命令的实际路径。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>type [选项] 命令</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-t：仅找出 Linux 命令的类型，输出“file”、“alias”或者“builtin”，分别表示给定的指令为“外部指令”、“命令别名”或者“内部指令”。</li><li>-p：如果给出的指令为外部指令，则显示其绝对路径。</li><li>-a：在环境变量“PATH”指定的路径中，显示给定指令的信息，包括命令别名。</li></ul><h2 id="命令类型"><a href="#命令类型" class="headerlink" title="命令类型"></a>命令类型</h2><ul><li>alias：别名。</li><li>keyword：函数，Shell保留字。</li><li>function：函数，Shell函数。</li><li>builtin：内建命令，Shell内建命令。</li><li>file：文件，磁盘文件，外部命令。</li><li>unfound：没有找到。</li></ul><h2 id="实用示例"><a href="#实用示例" class="headerlink" title="实用示例"></a>实用示例</h2><p><strong>实例：1. 仅找出Linux命令的类型</strong><br>描述：-t选项仅找出Linux命令的类型。例如别名，它不显示被别名的内容。如果该命令找不到，你将在终端中看不到任何内容。<br>命令：<br><code>type -t ls</code><br><code>type -t mkdir</code><br><code>type -t pwd</code><br><code>type -t if</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/type/type-t.png" alt=""></p><p><strong>实例：2. 找出命令的绝对路径</strong><br>描述：-p选项可以找出给定Linux命令的绝对路径，这与which命令很像。如果给定的命令是别名、内建命令或是函数，则不会打印任何内容。在这种情况下，-P选项将强制查找路径查找。<br>命令：<br><code>type -p date</code><br><code>type -p cat</code><br><code>type -p pwd</code><br><code>type -P pwd</code><br><code>which pwd</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/type/type-p-P.png" alt=""></p><p><strong>实例：3. 显示命令的所有信息</strong><br>描述：-a选项显示命令的所有信息，包括给定命令的类型及其绝度路径。<br>命令：<br><code>type -a ls</code><br><code>type -a echo</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/type/type-a.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;type命令用于查找Linux命令的信息。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux cut总结</title>
    <link href="http://www.iweeek.com/2018/06/13/linux/daily-command-cut/"/>
    <id>http://www.iweeek.com/2018/06/13/linux/daily-command-cut/</id>
    <published>2018-06-13T00:12:02.000Z</published>
    <updated>2018-06-18T12:41:56.285Z</updated>
    
    <content type="html"><![CDATA[<p>cut命令用来从标准输入或文本文件中剪切列或域。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>cut命令用来显示行中的指定部分，删除文件中指定字段。它也可以用于按字节位置、字符和分隔符来剪切部分行。也可以从CSV等文件格式中剪切数据。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>cut [选项] 文件1 文件2</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- -b：仅显示行中指定直接范围的内容。</span><br><span class="line">- -c：仅显示行中指定范围的字符。</span><br><span class="line">- -d：指定字段的分隔符，默认的字段分隔符为“TAB”。</span><br><span class="line">- -f：显示指定字段的内容。</span><br><span class="line">- -n：与“-b”选项连用，不分割多字节字符。</span><br><span class="line">- --complement：补足被选择的字节、字符或字段。</span><br><span class="line">- --out-delimiter=&lt;字段分隔符&gt;：指定输出内容是的字段分割符。</span><br><span class="line">- --help：显示指令的帮助信息。</span><br><span class="line">- --version：显示指令的版本信息。</span><br></pre></td></tr></table></figure><h2 id="实用示例"><a href="#实用示例" class="headerlink" title="实用示例"></a>实用示例</h2><p>cut命令可以将一串字符作为列来显示：</p><ul><li>N-：从第N个字节、字符、字段到结尾。</li><li>N-M：从第N个字节、字符、字段到第M个（包括M在内）字节、字符、字段。</li><li>-M：从第1个字节、字符、字段到第M个（包括M在内）字节、字符、字段。</li></ul><p>上面是表示法，下面的选项分别表示字节、字符、字段：</p><ul><li>-b：字节</li><li>-c：字符</li><li>-f：字段</li></ul><p><strong>实例：1. 按字节位置切割</strong><br>描述：三个例子切割的分别是（1）第2个、（2）第1和第2个、（3）第2和第3个、（4）第1和第2个、（5）第1和第3个字节位置的内容。-b选项通过指定一个字节位置来切出一行的一部分。<br>命令：<br><code>echo &#39;baz&#39; | cut -b 2</code><br><code>echo &#39;baz&#39; | cut -b -2</code><br><code>echo &#39;baz&#39; | cut -b 2-</code><br><code>echo &#39;baz&#39; | cut -b 1-2</code><br><code>echo &#39;baz&#39; | cut -b 1,3</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cut/cut-b.png" alt=""></p><p><strong>实例：2. 按字符位置切割</strong><br>描述：两个例子切割的分别是第1个和第6个、第1至3个字符位置的内容。-c选项通过指定一个字符位置来切出一行的一部分。<br>命令：<br><code>echo &#39;♣foobar&#39; | cut -c 1,6</code><br><code>echo &#39;♣foobar&#39; | cut -c 1-4</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cut/cut-c.png" alt=""></p><p><strong>实例：3. 根据分隔符进行剪切</strong><br>描述：两个例子以逗号,作为分隔符进行切割，切割的分别是第1个、第1和第4个字段位置的内容。-d选项指定一个分隔符，-f选项指定选取的字段。<br>命令：<br><code>cut -d , -f 1 names.csv</code><br><code>cut -d , -f 1,4 names.csv</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cut/cut-d-f.png" alt=""></p><p><strong>实例：4. 提取指定字段之外的列</strong><br>描述：第一个例子选取第1个字符之外的其他字符，第二个例子选取第2个字段之外的列。–complement用于提取指定字段之外的字节、字符或列。<br>命令：<br><code>echo &#39;foo&#39; | cut --complement -c 1</code><br><code>cut -f2 -d, --complement names.csv</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cut/cut-complement.png" alt=""></p><p><strong>实例：5. 输出分隔符</strong><br>描述：选取第1、3、4个字段，并用空格替换分号后显示。或者使用$’\n’的形式替换为换行。<br>命令：<br><code>echo &#39;how;now;brown;cow&#39; | cut -d &#39;;&#39; -f 1,3,4 --output-delimiter &#39; &#39;</code><br><code>echo &#39;how;now;brown;cow&#39; | cut -d &#39;;&#39; -f 1,3,4 --output-delimiter $&#39;\n&#39;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/cut/cut-output-delimiter.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;cut命令用来从标准输入或文本文件中剪切列或域。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux join总结</title>
    <link href="http://www.iweeek.com/2018/06/12/linux/daily-command-join/"/>
    <id>http://www.iweeek.com/2018/06/12/linux/daily-command-join/</id>
    <published>2018-06-12T08:59:13.000Z</published>
    <updated>2018-06-22T01:17:31.573Z</updated>
    
    <content type="html"><![CDATA[<p>join命令用来将两个分类文本文件的行连在一起，与SQL语言中的join命令相似。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>join命令根据两个分类文本文件的两个相同字段，将两个文件连接起来，结果写入标准输出。默认连接字段是由空格分隔的第一个字段。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>join [选项] 文件1 文件2</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-a&lt;1或2&gt;：除了显示原来的输出内容之外，还显示指令文件中没有匹配的行。</li><li>-e&lt;字符串&gt;：若[文件1]与[文件2]中找不到指定的栏位，则在输出中填入选项中的字符串。</li><li>-i或–ignore-case：比较栏位内容时，忽略大小写的差异。</li><li>-o&lt;格式&gt;：按照指定的格式来显示结果。</li><li>-t&lt;字符&gt;：使用栏位的分割字符。</li><li>-v&lt;1或2&gt;：更-a相同，但是只显示文件中没有匹配的行。</li><li>-1&lt;栏位&gt;：连接[文件1]指定的栏位。</li><li>-2&lt;栏位&gt;：连接[文件2]指定的栏位。</li></ul><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><p><strong>实例：1. 相同域连接</strong><br>描述：将foodtype.txt和foods.txt两个文件共享的第一个字段作为连接字段，将文件连接起来。<br>命令：<code>join foodtype.txt foods.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/join/join-two-file.png" alt=""></p><p><strong>实例：2. 不同域连接</strong><br>描述：将wine.txt的第二列和reviews.txt的第一列连接起来。也可以使用-j选项，即-j1 2 -j2 1。<br>命令：<code>join -1 2 -2 1 wine.txt reviews.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/join/join-1-2.png" alt=""></p><p><strong>实例：3. 先排序再连接</strong></p><p>描述：如果上述两个文件指定的文件未排序，那么在连接的时候会发生错误。<br>命令：<code>join -1 2 -2 1 wine.txt reviews.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/join/join-sort-file.png" alt=""></p><p>描述：先按wine.txt的第二列排好序，再按reviews的第一列排好序，最后将两个排好序的文件连接起来。<br>命令：<code>join -1 2 -2 1 &lt;(sort -k 2 wine.txt) &lt;(sort reviews.txt)</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/join/join-sort.png" alt=""></p><p><strong>实例：4. 指定字段分隔符</strong><br>描述：将names.csv和transactions.csv两个文件指定分隔符为，号进行连接，-t选项指定字段分隔符。<br>命令：<code>join -1 2 -2 3 -t , names.csv transactions.csv</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/join/join-t.png" alt=""></p><p><strong>实例：5. 指定显示的字段</strong><br>描述：-o选项指定连接的输出格式。<br>命令：<code>join -1 2 -2 3 -t , -o 1.1,1.2,1.3,2.2,2.1 names.csv transactions.csv</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/join/join-o.png" alt=""></p><p><strong>实例：6. 用默认字符串代替未匹配的字段</strong><br>描述：-e选项告诉join当找不到匹配项的时候应该用什么字符串来替换空位，-o选项告诉join哪些不匹配的字段应该被代替。-e只能与-o搭配使用。</p><ul><li>0,1.1,2.2：0表示匹配的关键字段。<ul><li>1.1：表示第一个文件中第一个字段。</li><li>2.2：表示第二个文件中第二个字段。</li></ul></li></ul><p>命令：<br><code>join -a 1 -a 2 -e &quot;NULL&quot; -o 1.1,1.2,2.2 foods.txt foodtype.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/join/join-e.png" alt=""></p><p><strong>实例：7. 显示匹配和不匹配的行</strong><br>描述：既显示成功匹配的行，也显示两个文件中不匹配的所有行。-a选项可选值为1或2，分别表示前后两个文件，意思是显示指定文件中不匹配的行。<br>命令：<br><code>join -a 1 foods.txt foodtype.txt</code><br><code>join -a 2 foods.txt foodtype.txt</code><br><code>join -a 1 -a 2 foods.txt foodtype.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/join/join-a.png" alt=""></p><p><strong>实例：8. 只显示不匹配的行</strong><br>描述：只两个文件中不匹配的所有行。-v选项可选值为1或2，分别表示前后两个文件，意思是只显示指定文件中不匹配的行，将忽略已匹配连接的行。<br>命令：<br><code>join -v 1 -v 2 foods.txt foodtype.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/join/join-v.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;join命令用来将两个分类文本文件的行连在一起，与SQL语言中的join命令相似。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux route总结</title>
    <link href="http://www.iweeek.com/2018/06/12/linux/daily-command-route/"/>
    <id>http://www.iweeek.com/2018/06/12/linux/daily-command-route/</id>
    <published>2018-06-12T07:23:32.000Z</published>
    <updated>2018-06-22T01:21:36.133Z</updated>
    
    <content type="html"><![CDATA[<p>route命令用来显示并设置Linux内核中的网络路由表。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>显示并设置Linux内核中的网络路由表，它设置的路由主要是静态路由。要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>route [选项] [参数]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-A：设置地址类型；</li><li>-C：打印将Linux核心的路由缓存；</li><li>-v：详细信息模式；</li><li>-n：不执行DNS反向查找，直接显示数字形式的IP地址；</li><li>-e：netstat格式显示路由表；</li><li>-net：到一个网络的路由表；</li><li>-host：到一个主机的路由表。</li></ul><h2 id="命令选项-1"><a href="#命令选项-1" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>Add：增加指定的路由记录；</li><li>Del：删除指定的路由记录；</li><li>Target：目的网络或目的主机；</li><li>gw：设置默认网关；</li><li>mss：设置TCP的最大区块长度（MSS），单位MB；</li><li>window：指定通过路由表的TCP连接的TCP窗口大小；</li><li>dev：路由记录所表示的网络接口。</li></ul><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><p><strong>实例：1. 显示当前路由</strong><br>描述：在显示当前路由。-n选项不执行DNS反向查找，直接显示数字形式的IP地址。<br>命令：<br><code>route</code><br><code>route -n</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/route/route-n.png" alt=""></p><p>其中Flags为路由标志，标记当前网络节点的状态，Flags标志说明：</p><ul><li>U Up表示此路由当前为启动状态。</li><li>H Host，表示此网关为一主机。</li><li>G Gateway，表示此网关为一路由器。</li><li>R Reinstate Route，使用动态路由重新初始化的路由。</li><li>D Dynamically,此路由是动态性地写入。</li><li>M Modified，此路由是由路由守护程序或导向器动态修改。</li><li>! 表示此路由当前为关闭状态。</li></ul><p><strong>实例：2. 添加网关/设置网关</strong><br>描述：增加一条到达244.0.0.0的路由。<br>命令：<code>route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/route/route-add.png" alt=""></p><p><strong>实例：3. 屏蔽一条路由</strong><br>描述：增加一条屏蔽的路由，目的地址为224.x.x.x将被拒绝。<br>命令：<code>route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/route/route-reject.png" alt=""></p><p><strong>实例：4. 删除路由记录</strong><br>描述：删除刚才创建的两条记录。<br>命令：<br><code>route del -net 224.0.0.0 netmask 240.0.0.0</code><br><code>route del -net 224.0.0.0 netmask 240.0.0.0 reject</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/route/route-del.png" alt=""></p><p><strong>实例：5. 删除和添加设置默认网关</strong><br>描述：不建议在连接到远程主机的时候删除默认网关，会导致断开远程主机的连接。不过在命令行下命令不会永久保存，当网卡重启或者机器重启之后，该路由就失效了。<br>命令：<br><code>route del default gw 172.16.63.253</code><br><code>route add default gw 172.16.63.253</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;route命令用来显示并设置Linux内核中的网络路由表。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux ping总结</title>
    <link href="http://www.iweeek.com/2018/06/12/linux/daily-command-ping/"/>
    <id>http://www.iweeek.com/2018/06/12/linux/daily-command-ping/</id>
    <published>2018-06-12T03:18:24.000Z</published>
    <updated>2018-06-22T01:20:45.532Z</updated>
    
    <content type="html"><![CDATA[<p>ping命令用来测试主机之间网络的连通性。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>ping通过发送ICMP ECHO_REQUEST数据包到网络主机，并显示响应情况，可以根据远程主机输出的信息来确定其是否可访问（不是绝对的），有些服务器为了防止通过ping探测到，通过防火墙设置了禁止ping或者在内核参数中禁止ping，这样就不能通过ping确定该主机是否处于开启状态。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>ping [选项] [主机名或IP地址]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-d：使用Socket的SO_DEBUG功能；</li><li>-c&lt;完成次数&gt;：设置完成要求回应的次数；</li><li>-f：极限检测；</li><li>-i&lt;间隔秒数&gt;：指定收发信息的间隔时间；</li><li>-I&lt;网络界面&gt;：使用指定的网络界面送出数据包；</li><li>-l&lt;前置载入&gt;：设置在送出要求信息之前，先行发出的数据包；</li><li>-n：只输出数值；</li><li>-p&lt;范本样式&gt;：设置填满数据包的范本样式；</li><li>-q：不显示指令执行过程，开头和结尾的相关信息除外；</li><li>-r：忽略普通的Routing Table，直接将数据包送到远端主机上；</li><li>-R：记录路由过程；</li><li>-s&lt;数据包大小&gt;：设置数据包的大小；</li><li>-t&lt;存活数值&gt;：设置存活数值TTL的大小；</li><li>-v：详细显示指令的执行过程。</li></ul><h2 id="实用实例"><a href="#实用实例" class="headerlink" title="实用实例"></a>实用实例</h2><p><strong>实例：1. 使用ping命令</strong><br>ping命令不断向网络发送请求，当收到响应时，将收到包含如下信息的输出：</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping.png" alt=""></p><p>第一行表示每次向域名/IP地址发送指定大小的数据包。接下来的数行是响应信息，具体包含以下字段：</p><ul><li>接收的字节数</li><li>IP地址</li><li>序列号</li><li>响应的时间</li></ul><p>最后一行是此次ping命令执行的统计信息：发送6个数据包，其中6个目标主机已收到，丢包率为0，总耗时5000毫秒。</p><p><strong>实例：2. 更改ping数据包之间的时间间隔</strong><br>描述：每隔3秒发送一个数据包。-i选项指定包之间的时间间隔。<br>命令：<code>ping -i 3 iweeek.com</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-i.png" alt=""></p><p><strong>实例：3. 更改ping数据包大小</strong><br>描述：默认情况下，ping数据包中的字节数为56（如果包含8个字节的ICMP头，则为64）。可以使用-s选项更改此值。例如，发送一个1024字节的数据包（1032包括ICMP头）：<br>命令：<code>ping -s 1024 iweeek.com</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-s.png" alt=""></p><p><strong>实例：4. 发送指定数量的ping数据包</strong><br>描述：ping的默认行为是保持发送数据包知道用户中断为止。使用-c选项可以在发送一定数量的数据包之后强制ping停止执行。例如，在发送3个数据包之后，停止执行：<br>命令：<code>ping -c 3 iweeek.com</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-host.png" alt=""></p><p><strong>实例：5. 指定时间间隔和发送次数</strong><br>描述：总共花费20秒发出10个数据包，数据包的时间间隔为2秒。<br>命令：<code>ping -i 2 -c 10 127.0.0.1</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-i-c.png" alt=""></p><p><strong>实例：6. 设置ping的硬超时（最长运行时间）</strong><br>描述：每隔3秒发送一个数据包，最长运行10秒。可见，最多输出发送4个数据包。-w选项指定ping的退出时间，单位是秒。以下是官方解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-w deadline</span><br><span class="line">       Specify a timeout, in seconds, before ping exits regardless of how many packets have</span><br><span class="line">       been  sent or received. In this case ping does not stop after count packet are sent,</span><br><span class="line">       it waits either for deadline expire or until count probes are answered or  for  some</span><br><span class="line">       error notification from network.</span><br></pre></td></tr></table></figure><p>命令：<code>ping -w 10 -i 3 iweeek.com</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-w.png" alt=""></p><p><strong>实例：7. 设置ping的软超时</strong><br>描述：-w选项确保ping在截止日期过期后停止，-W选项也可以使ping停止，但仅限于目标端没有响应时。以下是官方解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-W timeout</span><br><span class="line">       Time to wait for a response, in seconds. The option affects only</span><br><span class="line">       timeout  in  absence  of any responses, otherwise ping waits for</span><br><span class="line">       two RTTs.</span><br></pre></td></tr></table></figure><p>命令：<code>ping -W 3 iweeek.com</code> </p><p><strong>实例：8. 使用ping启动大量数据包</strong><br>描述：-f选项可以启动大量数据包。下面是官方的解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-f     Flood  ping. For every ECHO_REQUEST sent a period ``.&apos;&apos; is printed,</span><br><span class="line">       while for ever ECHO_REPLY received a backspace  is  printed.   This</span><br><span class="line">       provides a rapid display of how many packets are being dropped.  If</span><br><span class="line">       interval is not given, it sets interval to zero and outputs packets</span><br><span class="line">       as  fast  as they come back or one hundred times per second, which‐</span><br><span class="line">       ever is more.  Only the super-user may use this  option  with  zero</span><br><span class="line">       interval.</span><br></pre></td></tr></table></figure><p>命令：<code>ping -f iweeek.com</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-f.png" alt=""></p><p><strong>实例：9. 在每行之前打印ping时间戳</strong><br>描述：-D选项可以打印unix时间和微妙的组合。<br>命令：<code>ping -D iweeek.com</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-D.png" alt=""></p><p><strong>实例：10. 不显示具体请求信息</strong><br>描述：-q不显示发送和接收的美和请求之间发生的所有事情，而只是开始和结束时的输出。<br>命令：<code>ping -q iweeek.com</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-q.png" alt=""></p><p><strong>实例：11. 多参数使用</strong><br>描述：向域名iweeek.com发送5个数据包，每个间隔2秒，数据包大小为1024字节，TTL值为255，测试其连通性。<br>命令：<code>ping -c 5 -i 2 -s 1024 -t 255 iweeek.com</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/ping/ping-mul-params.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ping命令用来测试主机之间网络的连通性。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux uniq总结</title>
    <link href="http://www.iweeek.com/2018/06/12/linux/daily-command-uniq/"/>
    <id>http://www.iweeek.com/2018/06/12/linux/daily-command-uniq/</id>
    <published>2018-06-12T00:53:22.000Z</published>
    <updated>2018-06-18T12:41:56.342Z</updated>
    
    <content type="html"><![CDATA[<p>uniq命令用于报告或忽略文件中的重复行。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>uniq命令可以轻松地从文件中找到重复的行，而且可以删除重复项，显示重复项出现的次数，只显示重复的行，只显示唯一的行。<br>请注意，除非重复行是相邻的，否则uniq不会删除它们。因此可能需要先对它们进行排序，或将排序命令与uniq组合使用。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>uniq [选项] [文件]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-c或——count：在每列旁边显示该行重复出现的次数；</li><li>-d或–repeated：仅显示重复出现的行列；</li><li>-f&lt;栏位&gt;或–skip-fields=&lt;栏位&gt;：忽略比较指定的栏位；</li><li>-s&lt;字符位置&gt;或–skip-chars=&lt;字符位置&gt;：忽略比较指定的字符；</li><li>-u或——unique：仅显示出一次的行列；</li><li>-w&lt;字符位置&gt;或–check-chars=&lt;字符位置&gt;：指定要比较的字符。</li></ul><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><p><strong>实例：1. 默认情况</strong><br>描述：uniq命令删除了给定文件中所有连续重复的行。可以看到输出中，第1行和第3行重复了，第2行和第5行重复了。这是因为uniq命令只有在相邻的情况下才会删除重复的行<br>命令：<code>uniq device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq.png" alt=""></p><p><strong>实例：2. 删除所有重复的行</strong><br>描述：经过排序之后，所有相同的行都连续地排在一起，达到了删除所有行的目的。<br>命令：<br><code>sort -u device</code><br><code>sort device | uniq</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-sort.png" alt=""></p><p><strong>实例：3. 仅显示不连续重复的单一行</strong><br>描述：只显示device中不连续重复的单一行，只有10:aaa:43是唯一的。<br>命令：<code>uniq -u device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-u.png" alt=""></p><p><strong>实例：4. 找出重复的行</strong><br>显示device文件中连续出现的重复行。同样，不连续重复的相同行是不重复的行。</p><p>描述：33:fff:221出现了两次，因为它们不是连续的。<br>命令：<code>uniq -d device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-d.png" alt=""></p><p>描述：在device文件中的第一行插入一行11:eee:49，但输出中没有出现，因为它们不是连续的。<br>命令：<br><code>vim device &lt;修改文件&gt;</code><br><code>uniq -d device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-d5.png" alt=""></p><p>描述：先排序，然后真正找出重复的行。<br>命令：<code>sort device | uniq -d</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-d3.png" alt=""></p><p>描述：先排序，然后将所有重复的行全部显示出来。<br>命令：<code>sort device | uniq -D</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-d4.png" alt=""></p><p><strong>实例：5. 统计各行在出现的次数</strong><br>描述：-c选项统计device文件中各行重复的次数。<br>命令：<code>uniq -c device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-c.png" alt=""></p><p>描述：下面的例子，检查给定文件中每一行重复出现的行数。<br>命令：<code>sort device | uniq -c | sort -nr</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-c-sort.png" alt=""></p><p><strong>实例：6. 将比较限制为N个字符</strong><br>描述：只比较每行的第一个字符。输出中可以看到，前两行被当做相同的行。-d选项将比较限制为N个字符。<br>命令：<code>uniq -d -w 1 device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-w.png" alt=""></p><p><strong>实例：7. 忽略N个字符后比较</strong><br>描述：下面的命令将忽略在文件中每行的前七个字符后，再进行比较。-s选项来忽略比较前N个字符。<br>命令：<code>uniq -d -s 7 device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-s.png" alt=""></p><p><strong>实例：8. 忽略N个字段后比较</strong></p><p>描述：先将device文件的内容排序后，用awk格式化输出。-t和-F指定sort和awk的域分隔符。<br>命令：<code>sort -t: device | awk -F: &#39;{print $1&quot; &quot;$2&quot; &quot;$3}&#39;</code></p><p>描述：忽略两个字段后进行比较。从输出中看到，第三个字段只有49和221是重复的。-f选项指定忽略N个字段后，再进行比较。<br>命令：<code>sort -t: device | awk -F: &#39;{print $1&quot; &quot;$2&quot; &quot;$3}&#39; | uniq -d -f 2</code></p><p>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/uniq/uniq-f.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;uniq命令用于报告或忽略文件中的重复行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux sort总结</title>
    <link href="http://www.iweeek.com/2018/06/11/linux/daily-command-sort/"/>
    <id>http://www.iweeek.com/2018/06/11/linux/daily-command-sort/</id>
    <published>2018-06-11T10:40:13.000Z</published>
    <updated>2018-06-22T01:53:57.512Z</updated>
    
    <content type="html"><![CDATA[<p>sort命令用于对单个或多个文本文件内容进行排序。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>sort命令将许多不同的域按不同的列顺序分类。sort命令以空格作为字段分隔符，将一行分割为多个关键字对文件进行排序。需要注意的是sort命令并不对文件内容进行实际的排序(即文件内容没有修改)，只是将文件内容按有序输出。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>sort -cmu -o output_file [other_options] +pos1 +pos2 input_files</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-c：检查文件是否已经按照顺序排序。</li><li>-m：将几个排序号的文件进行合并。</li><li>-u：删除所有重复行。</li><li>-o&lt;输出文件&gt;：将排序后的结果存入指定的文件。</li><li>-b：忽略每行前面开始出的空格字符。</li><li>-h：人类可阅读的格式。</li><li>-d：排序时，处理英文字母、数字及空格字符外，忽略其他的字符。</li><li>-f：排序时，将小写字母视为大写字母。</li><li>-i：排序时，除了040至176之间的ASCII字符外，忽略其他的字符。</li><li>-M：将前面3个字母依照月份的缩写进行排序。</li><li>-n：按照数值的大小排序。</li><li>-r：以相反的顺序来排序。</li><li>-t&lt;分隔字符&gt;：指定排序时所用的栏位分隔字符。</li><li>+&lt;起始栏位&gt;-&lt;结束栏位&gt;：以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。</li></ul><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><p><strong>实例：0. 测试文件</strong><br>描述：下面是device_sort的清单，包含了用户设备登录次数情况，各域为：（1）用户ID，（2）手机系统版本，（3）登录访问次数。域分隔符为冒号。域号从0开始，第1列用户ID为域0，即分类键0，以此类推。</p><p><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-origin-file.png" alt=""></p><p><strong>实例：1. 文件是否已分类</strong><br>描述：检查device文件的域用户ID是否已经有序。sort不加任何参数默认以域0（也就是第一列）进行排序，-c选项检查文件是否已按某种顺序排序。<br>命令：<code>sort -c device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-origin-file.png" alt=""></p><p><strong>实例：2. 使用分隔符</strong><br>描述：将device用:作为域分隔符分类，然后按第一列进行排序。实际上读文件时sort操作将行中各域进行比较，这里只返回基于第一域sort的结果。<br>命令：<code>sort -t : device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-t.png" alt=""></p><p><strong>实例：3. 排序求逆</strong><br>描述：反转实例2中的排序结果。这里先按照第一列进行排序，然后反转其结果。<br>命令：<code>sort -t: -r device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-r.png" alt=""></p><p><strong>实例：4.  使用选项k按指定列排序</strong><br>描述：使用选项k指定第1列进行排序。<br>命令：<code>sort -k1 -t: device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-k.png" alt=""></p><p><strong>实例：5. 数值域排序</strong></p><p>描述：使用n选项指明对数值内容进行排序，否则会按字符串从第一个字符开始进行比较。<br>命令：<code>sort -nk3 -t: device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-n.png" alt=""></p><p><strong>实例：6. 唯一性排序</strong></p><p>描述：使用u选项过滤所有重复的行，每个重复的行只显示一次。<br>命令：<code>sort -u -t: device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-u.png" alt=""></p><p><strong>实例：7. 两个文件进行排序、合并，并且删除重复行</strong></p><p>描述：两个文件进行排序、合并，并且删除重复行。<br>命令：<code>sort -u device device2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-u-merge.png" alt=""></p><p><strong>实例：8. pos用法</strong></p><p>格式：<code>F[.C][OPTS][,F[.C][OPTS]]</code><br>解释：指定排序域开始和结束的位置，F是字段的序号，C是字符的序号，两者初始都是1，结束位置可以不指定，默认是到行结束位置。如果-t和-b选项都没有指定，那么字段中的字符从前面的空白开始计数。OPTS由一个或多个单个字母排序的选项[bdfgiMhnRrV]，它们将重写全局排序选项，如果没有排序键被指定，sort就会以一整行作为键。-b选项去除每个键的前导空白。</p><p>假设有五列字段。<br>-k 2：表示从第二列开始到最后一列作为排序的关键字。<br>-k 2,5：表示从第二列开始到第五列作为排序的关键字。<br>-k 2,2：表示仅以第二列作为排序的关键字。<br>-k 4 -k 5：-k5是多余的。<br>-k 2,2 -k 1,1：先以第二列进行排序，再以第一列排序。<br>-k 2.2,2.5 -k 4.3,4.5：先以第二列的第二个字符开始到第五个字符进行排序，然后先以第四列的第三个字符开始到第五个字符进行排序。</p><p>格式：<code>sort +field_number .characters_in</code><br>描述：从第三列的第二个字符开始排序。<br>命令：<code>sort -k3.2 -t: device</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-pos.png" alt=""></p><p>描述：对/root目录执行ls -l的命令，其结果通过管道传递给sort进行排序，先以第二列排序，然后第五列，最后是第九列倒序。<br>命令：<code>ls -l /root | sort -k 2,2n -k 5,5n -r -k 9,9</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-k-pos.png" alt=""></p><p><strong>实例：9. head和tail与sort配合使用</strong></p><p>格式：<code>sort +field_number .characters_in</code><br>描述：以第三列的数值形式进行排序，从结果中抽取前3条和倒数3条记录。<br>命令：<br><code>sort -nk3 -t: device | head -3</code><br><code>sort -nk3 -t: device | tail -3</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-head-tail.png" alt=""></p><p><strong>实例：10. awk与sort配合使用</strong></p><p>描述：将sort结果用awk进行加一点附加信息。<br>命令：<code>sort -nk3 -t: device | tail -1 | awk -F: &#39;{print $1&quot;--&quot;$2&quot;--&quot;$3}&#39;</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-awk.png" alt=""></p><p><strong>实例：11. 两个输入文件进行sort，然后把它们连接成一行</strong><br>描述：创建两个文件，并用数据填充，然后对这两个文件排序并连接。<br>命令：<br><code>echo -e &quot;5 Reliable\n2 Fast\n3 Secure\n1 open-source\n4 customizable&quot; &gt; file1.txt</code><br><code>echo -e &quot;3 RedHat\n1 Debian\n5 Ubuntu\n2 Kali\n4 Fedora&quot; &gt; file2.txt</code><br><code>join &lt;(sort -n file1.txt) &lt;(sort file2.txt)1 open-source Debian</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-join.png" alt=""></p><p><strong>实例：12. 将两个分类文件合并</strong></p><p>描述：device_sorted和device_sorted2是两个已排好序的文件，文件合并前，它们必须以被分类。<br>命令：<code>sort -t: -m -k1 device_sorted device_sorted2</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-merge.png" alt=""></p><p><strong>实例：13. 按照月份顺序进行排序</strong></p><p>描述：M选项对month.txt文件按照月份顺序进行排序。sort命令需要至少3个字符来确认月份名称。<br>命令：<code>sort -M month.txt</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-M.png" alt=""></p><p><strong>实例：14. 把数据整理成方便人们阅读的形式</strong></p><p>描述：-h选项将把数据整理成方便人们阅读的形式，比如1K、2M、3G、2T，这里面的K、G、M、T代表千、兆、吉、梯。<br>命令：<code>ls -lh /root | sort -h -k5</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-h.png" alt=""></p><p><strong>实例：15. 随机化结果</strong><br>描述：-R选项将结果进行hash随机化排序。<br>命令：<code>ls -lh /root | sort -k5 -R</code><br>输出：<br><img src="http://pabfn7ecx.bkt.clouddn.com/sort/sort-Random.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sort命令用于对单个或多个文本文件内容进行排序。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.iweeek.com/tags/Linux/"/>
    
  </entry>
  
</feed>
